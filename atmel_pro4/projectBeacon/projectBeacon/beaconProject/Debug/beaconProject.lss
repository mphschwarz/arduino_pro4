
beaconProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007e  00800100  00001282  00001316  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001282  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001dd  0080017e  0080017e  00001394  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001394  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000013c4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003b0  00000000  00000000  00001404  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a8e9  00000000  00000000  000017b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001fdd  00000000  00000000  0000c09d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000021a6  00000000  00000000  0000e07a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ab0  00000000  00000000  00010220  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000026e1  00000000  00000000  00010cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003c82  00000000  00000000  000133b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003b0  00000000  00000000  00017033  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__dtors_end>
       4:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
       8:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
       c:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <__vector_3>
      10:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <__vector_3>
      14:	0c 94 a4 06 	jmp	0xd48	; 0xd48 <__vector_3>
      18:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      1c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      20:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      24:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      28:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      2c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      30:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      34:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      38:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      3c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      40:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__vector_16>
      44:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      48:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__vector_18>
      4c:	0c 94 19 04 	jmp	0x832	; 0x832 <__vector_19>
      50:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      54:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      58:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      5c:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      60:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>
      64:	0c 94 8c 00 	jmp	0x118	; 0x118 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 08       	sbc	r0, r0
      6c:	00 02       	muls	r16, r16
      6e:	01 00       	.word	0x0001	; ????
      70:	00 03       	mulsu	r16, r16
      72:	04 07       	cpc	r16, r20
	...

0000007c <digital_pin_to_bit_mask_PGM>:
      7c:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 01 02     ..... @...... ..
      8c:	04 08 10 20                                         ... 

00000090 <digital_pin_to_port_PGM>:
      90:	04 04 04 04 04 04 04 04 02 02 02 02 02 02 03 03     ................
      a0:	03 03 03 03                                         ....

000000a4 <port_to_input_PGM>:
      a4:	00 00 00 00 23 00 26 00 29 00                       ....#.&.).

000000ae <port_to_output_PGM>:
      ae:	00 00 00 00 25 00 28 00 2b 00                       ....%.(.+.

000000b8 <port_to_mode_PGM>:
      b8:	00 00 00 00 24 00 27 00 2a 00                       ....$.'.*.

000000c2 <__ctors_start>:
      c2:	8e 00       	.word	0x008e	; ????
      c4:	49 04       	cpc	r4, r9

000000c6 <__ctors_end>:
      c6:	95 00       	.word	0x0095	; ????

000000c8 <__dtors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d8 e0       	ldi	r29, 0x08	; 8
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	11 e0       	ldi	r17, 0x01	; 1
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e2 e8       	ldi	r30, 0x82	; 130
      dc:	f2 e1       	ldi	r31, 0x12	; 18
      de:	02 c0       	rjmp	.+4      	; 0xe4 <__do_copy_data+0x10>
      e0:	05 90       	lpm	r0, Z+
      e2:	0d 92       	st	X+, r0
      e4:	ae 37       	cpi	r26, 0x7E	; 126
      e6:	b1 07       	cpc	r27, r17
      e8:	d9 f7       	brne	.-10     	; 0xe0 <__do_copy_data+0xc>

000000ea <__do_clear_bss>:
      ea:	23 e0       	ldi	r18, 0x03	; 3
      ec:	ae e7       	ldi	r26, 0x7E	; 126
      ee:	b1 e0       	ldi	r27, 0x01	; 1
      f0:	01 c0       	rjmp	.+2      	; 0xf4 <.do_clear_bss_start>

000000f2 <.do_clear_bss_loop>:
      f2:	1d 92       	st	X+, r1

000000f4 <.do_clear_bss_start>:
      f4:	ab 35       	cpi	r26, 0x5B	; 91
      f6:	b2 07       	cpc	r27, r18
      f8:	e1 f7       	brne	.-8      	; 0xf2 <.do_clear_bss_loop>

000000fa <__do_global_ctors>:
      fa:	10 e0       	ldi	r17, 0x00	; 0
      fc:	c3 e6       	ldi	r28, 0x63	; 99
      fe:	d0 e0       	ldi	r29, 0x00	; 0
     100:	04 c0       	rjmp	.+8      	; 0x10a <__do_global_ctors+0x10>
     102:	21 97       	sbiw	r28, 0x01	; 1
     104:	fe 01       	movw	r30, r28
     106:	0e 94 2e 09 	call	0x125c	; 0x125c <__tablejump2__>
     10a:	c1 36       	cpi	r28, 0x61	; 97
     10c:	d1 07       	cpc	r29, r17
     10e:	c9 f7       	brne	.-14     	; 0x102 <__do_global_ctors+0x8>
     110:	0e 94 77 04 	call	0x8ee	; 0x8ee <main>
     114:	0c 94 34 09 	jmp	0x1268	; 0x1268 <__do_global_dtors>

00000118 <__bad_interrupt>:
     118:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011c <_GLOBAL__sub_I_BTSerial>:
#include <Arduino.h>

#include <SoftwareSerial.h>
#include <Time.h>

SoftwareSerial BTSerial(2,3); //(RX | TX) - PINS
     11c:	20 e0       	ldi	r18, 0x00	; 0
     11e:	43 e0       	ldi	r20, 0x03	; 3
     120:	62 e0       	ldi	r22, 0x02	; 2
     122:	82 e5       	ldi	r24, 0x52	; 82
     124:	92 e0       	ldi	r25, 0x02	; 2
     126:	0c 94 77 07 	jmp	0xeee	; 0xeee <_ZN14SoftwareSerialC1Ehhb>

0000012a <_GLOBAL__sub_D_BTSerial>:
     12a:	82 e5       	ldi	r24, 0x52	; 82
     12c:	92 e0       	ldi	r25, 0x02	; 2
     12e:	0c 94 1e 07 	jmp	0xe3c	; 0xe3c <_ZN14SoftwareSerialD1Ev>

00000132 <_Z11sendCommandi.part.1>:
			break;
		}
	}
}

void sendCommand(int com)
     132:	cf 93       	push	r28
     134:	df 93       	push	r29
  switch(com)
  {
    case 1:
      for(int i = 0; i < 2; i++)
      {
        BTSerial.write(command_AT[i]);
     136:	c8 e0       	ldi	r28, 0x08	; 8
     138:	d1 e0       	ldi	r29, 0x01	; 1
     13a:	68 81       	ld	r22, Y
     13c:	82 e5       	ldi	r24, 0x52	; 82
     13e:	92 e0       	ldi	r25, 0x02	; 2
     140:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <_ZN14SoftwareSerial5writeEh>
     144:	69 81       	ldd	r22, Y+1	; 0x01
     146:	82 e5       	ldi	r24, 0x52	; 82
     148:	92 e0       	ldi	r25, 0x02	; 2
      break;
    default:
      //do nothing
      break;
  }
}
     14a:	df 91       	pop	r29
     14c:	cf 91       	pop	r28
  switch(com)
  {
    case 1:
      for(int i = 0; i < 2; i++)
      {
        BTSerial.write(command_AT[i]);
     14e:	0c 94 e4 05 	jmp	0xbc8	; 0xbc8 <_ZN14SoftwareSerial5writeEh>

00000152 <_Z11sendCommandi>:
		}
	}
}

void sendCommand(int com)
{
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
  switch(com)
     156:	81 30       	cpi	r24, 0x01	; 1
     158:	91 05       	cpc	r25, r1
     15a:	29 f0       	breq	.+10     	; 0x166 <_Z11sendCommandi+0x14>
     15c:	02 97       	sbiw	r24, 0x02	; 2
     15e:	81 f4       	brne	.+32     	; 0x180 <_Z11sendCommandi+0x2e>
     160:	c0 e0       	ldi	r28, 0x00	; 0
     162:	d1 e0       	ldi	r29, 0x01	; 1
     164:	04 c0       	rjmp	.+8      	; 0x16e <_Z11sendCommandi+0x1c>
      break;
    default:
      //do nothing
      break;
  }
}
     166:	df 91       	pop	r29
     168:	cf 91       	pop	r28
     16a:	0c 94 99 00 	jmp	0x132	; 0x132 <_Z11sendCommandi.part.1>
      }
      break;
    case 2:
      for(int i = 0; i < 8; i++)
      {
        BTSerial.write(command_ATDISI[i]);
     16e:	69 91       	ld	r22, Y+
     170:	82 e5       	ldi	r24, 0x52	; 82
     172:	92 e0       	ldi	r25, 0x02	; 2
     174:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <_ZN14SoftwareSerial5writeEh>
      {
        BTSerial.write(command_AT[i]);
      }
      break;
    case 2:
      for(int i = 0; i < 8; i++)
     178:	81 e0       	ldi	r24, 0x01	; 1
     17a:	c8 30       	cpi	r28, 0x08	; 8
     17c:	d8 07       	cpc	r29, r24
     17e:	b9 f7       	brne	.-18     	; 0x16e <_Z11sendCommandi+0x1c>
      break;
    default:
      //do nothing
      break;
  }
}
     180:	df 91       	pop	r29
     182:	cf 91       	pop	r28
     184:	08 95       	ret

00000186 <_Z10readAnswerv>:

int readAnswer()
{
  while(!BTSerial.available())
     186:	82 e5       	ldi	r24, 0x52	; 82
     188:	92 e0       	ldi	r25, 0x02	; 2
     18a:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZN14SoftwareSerial9availableEv>
     18e:	89 2b       	or	r24, r25
     190:	d1 f3       	breq	.-12     	; 0x186 <_Z10readAnswerv>
  {/*wait until datas are available to read*/}  
  incomingByte = BTSerial.read();
     192:	82 e5       	ldi	r24, 0x52	; 82
     194:	92 e0       	ldi	r25, 0x02	; 2
     196:	0e 94 c3 05 	call	0xb86	; 0xb86 <_ZN14SoftwareSerial4readEv>
     19a:	90 93 51 02 	sts	0x0251, r25	; 0x800251 <incomingByte+0x1>
     19e:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <incomingByte>
  
  return incomingByte;
}
     1a2:	08 95       	ret

000001a4 <_Z13firstResponsev>:
  firstResponse();
}

void firstResponse()
{
	while(!BTSerial.available())
     1a4:	82 e5       	ldi	r24, 0x52	; 82
     1a6:	92 e0       	ldi	r25, 0x02	; 2
     1a8:	0e 94 4d 06 	call	0xc9a	; 0xc9a <_ZN14SoftwareSerial9availableEv>
     1ac:	89 2b       	or	r24, r25
     1ae:	81 f4       	brne	.+32     	; 0x1d0 <_Z13firstResponsev+0x2c>
     1b0:	0e 94 99 00 	call	0x132	; 0x132 <_Z11sendCommandi.part.1>
	{
		sendCommand(1);
		delay(2500);
     1b4:	64 ec       	ldi	r22, 0xC4	; 196
     1b6:	79 e0       	ldi	r23, 0x09	; 9
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	0e 94 4c 05 	call	0xa98	; 0xa98 <delay>
  firstResponse();
}

void firstResponse()
{
	while(!BTSerial.available())
     1c0:	f1 cf       	rjmp	.-30     	; 0x1a4 <_Z13firstResponsev>
	
	while (1)
	{
		if (readAnswer() == 79)
		{
			if (readAnswer() == 75)
     1c2:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     1c6:	8b 34       	cpi	r24, 0x4B	; 75
     1c8:	91 05       	cpc	r25, r1
     1ca:	41 f0       	breq	.+16     	; 0x1dc <_Z13firstResponsev+0x38>
			{
				break;
			}
			else
			{
				firstResponse();
     1cc:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <_Z13firstResponsev>
		delay(2500);
	}
	
	while (1)
	{
		if (readAnswer() == 79)
     1d0:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     1d4:	8f 34       	cpi	r24, 0x4F	; 79
     1d6:	91 05       	cpc	r25, r1
     1d8:	c9 f7       	brne	.-14     	; 0x1cc <_Z13firstResponsev+0x28>
     1da:	f3 cf       	rjmp	.-26     	; 0x1c2 <_Z13firstResponsev+0x1e>
     1dc:	08 95       	ret

000001de <setup>:
  public:
    inline HardwareSerial(
      volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
      volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
      volatile uint8_t *ucsrc, volatile uint8_t *udr);
    void begin(unsigned long baud) { begin(baud, SERIAL_8N1); }
     1de:	26 e0       	ldi	r18, 0x06	; 6
     1e0:	40 e8       	ldi	r20, 0x80	; 128
     1e2:	55 e2       	ldi	r21, 0x25	; 37
     1e4:	60 e0       	ldi	r22, 0x00	; 0
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	81 e7       	ldi	r24, 0x71	; 113
     1ea:	92 e0       	ldi	r25, 0x02	; 2
     1ec:	0e 94 7f 03 	call	0x6fe	; 0x6fe <_ZN14HardwareSerial5beginEmh>
UUID_RSSI_values beacon6;

void setup() 
{
  Serial.begin(9600);
  BTSerial.begin(9600);  
     1f0:	40 e8       	ldi	r20, 0x80	; 128
     1f2:	55 e2       	ldi	r21, 0x25	; 37
     1f4:	60 e0       	ldi	r22, 0x00	; 0
     1f6:	70 e0       	ldi	r23, 0x00	; 0
     1f8:	82 e5       	ldi	r24, 0x52	; 82
     1fa:	92 e0       	ldi	r25, 0x02	; 2
     1fc:	0e 94 a2 07 	call	0xf44	; 0xf44 <_ZN14SoftwareSerial5beginEl>
    
  DDRC = 255;        //set all PINS to output
     200:	8f ef       	ldi	r24, 0xFF	; 255
     202:	87 b9       	out	0x07, r24	; 7
  //VIBRO = (1<<5);         //test VIBRO as LED
  
  //send AT until OK response from BT-Module
  firstResponse();
     204:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <_Z13firstResponsev>

00000208 <_Z12getUUID_RSSIv>:
	}
	return i++;
}

struct UUID_RSSI_values getUUID_RSSI()
{
     208:	ef 92       	push	r14
     20a:	ff 92       	push	r15
     20c:	0f 93       	push	r16
     20e:	1f 93       	push	r17
     210:	cf 93       	push	r28
     212:	df 93       	push	r29
     214:	ec 01       	movw	r28, r24
	UUID_RSSI_values beacon;
	
	while(readAnswer() != 58)
     216:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     21a:	ca 97       	sbiw	r24, 0x3a	; 58
     21c:	e1 f7       	brne	.-8      	; 0x216 <_Z12getUUID_RSSIv+0xe>
     21e:	8e 01       	movw	r16, r28
     220:	7e 01       	movw	r14, r28
     222:	80 e2       	ldi	r24, 0x20	; 32
     224:	e8 0e       	add	r14, r24
     226:	f1 1c       	adc	r15, r1
	{/*wait until ':' is recived*/}
	for(int i = 0; i < 32; i++)
	{
		beacon.UUID[i] = readAnswer();
     228:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     22c:	f8 01       	movw	r30, r16
     22e:	81 93       	st	Z+, r24
     230:	8f 01       	movw	r16, r30
{
	UUID_RSSI_values beacon;
	
	while(readAnswer() != 58)
	{/*wait until ':' is recived*/}
	for(int i = 0; i < 32; i++)
     232:	ee 15       	cp	r30, r14
     234:	ff 05       	cpc	r31, r15
     236:	c1 f7       	brne	.-16     	; 0x228 <_Z12getUUID_RSSIv+0x20>
	{
		beacon.UUID[i] = readAnswer();
	}
	while(readAnswer() != 45)
     238:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     23c:	8d 97       	sbiw	r24, 0x2d	; 45
     23e:	e1 f7       	brne	.-8      	; 0x238 <_Z12getUUID_RSSIv+0x30>
	{/*wait until '-' is recived*/}
	for(int i = 0; i < 3; i++)
	{
		beacon.value_RSSI[i] = readAnswer();
     240:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     244:	88 a3       	std	Y+32, r24	; 0x20
     246:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     24a:	89 a3       	std	Y+33, r24	; 0x21
     24c:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     250:	8a a3       	std	Y+34, r24	; 0x22
	}
	return beacon;
}
     252:	ce 01       	movw	r24, r28
     254:	df 91       	pop	r29
     256:	cf 91       	pop	r28
     258:	1f 91       	pop	r17
     25a:	0f 91       	pop	r16
     25c:	ff 90       	pop	r15
     25e:	ef 90       	pop	r14
     260:	08 95       	ret

00000262 <_Z12printBeacons16UUID_RSSI_values>:

void printBeacons(UUID_RSSI_values beacon)
{	
     262:	ef 92       	push	r14
     264:	ff 92       	push	r15
     266:	0f 93       	push	r16
     268:	1f 93       	push	r17
     26a:	cf 93       	push	r28
     26c:	df 93       	push	r29
     26e:	cd b7       	in	r28, 0x3d	; 61
     270:	de b7       	in	r29, 0x3e	; 62
	Serial.println("Beacon:");
     272:	6a e0       	ldi	r22, 0x0A	; 10
     274:	71 e0       	ldi	r23, 0x01	; 1
     276:	81 e7       	ldi	r24, 0x71	; 113
     278:	92 e0       	ldi	r25, 0x02	; 2
     27a:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN5Print7printlnEPKc>
	Serial.print("UUID: ");
     27e:	62 e1       	ldi	r22, 0x12	; 18
     280:	71 e0       	ldi	r23, 0x01	; 1
     282:	81 e7       	ldi	r24, 0x71	; 113
     284:	92 e0       	ldi	r25, 0x02	; 2
     286:	0e 94 c5 04 	call	0x98a	; 0x98a <_ZN5Print5printEPKc>
     28a:	ce 01       	movw	r24, r28
     28c:	09 96       	adiw	r24, 0x09	; 9
     28e:	7c 01       	movw	r14, r24
     290:	8e 01       	movw	r16, r28
     292:	07 5d       	subi	r16, 0xD7	; 215
     294:	1f 4f       	sbci	r17, 0xFF	; 255
	for(int i = 0; i < 32; i++)				//write values to emulator
	{
		Serial.write(beacon.UUID[i]);
     296:	f7 01       	movw	r30, r14
     298:	61 91       	ld	r22, Z+
     29a:	7f 01       	movw	r14, r30
    virtual void flush(void);
    virtual size_t write(uint8_t);
    inline size_t write(unsigned long n) { return write((uint8_t)n); }
    inline size_t write(long n) { return write((uint8_t)n); }
    inline size_t write(unsigned int n) { return write((uint8_t)n); }
    inline size_t write(int n) { return write((uint8_t)n); }
     29c:	81 e7       	ldi	r24, 0x71	; 113
     29e:	92 e0       	ldi	r25, 0x02	; 2
     2a0:	0e 94 16 03 	call	0x62c	; 0x62c <_ZN14HardwareSerial5writeEh>

void printBeacons(UUID_RSSI_values beacon)
{	
	Serial.println("Beacon:");
	Serial.print("UUID: ");
	for(int i = 0; i < 32; i++)				//write values to emulator
     2a4:	0e 15       	cp	r16, r14
     2a6:	1f 05       	cpc	r17, r15
     2a8:	b1 f7       	brne	.-20     	; 0x296 <_Z12printBeacons16UUID_RSSI_values+0x34>
	{
		Serial.write(beacon.UUID[i]);
	}
	Serial.println("");
     2aa:	6f e5       	ldi	r22, 0x5F	; 95
     2ac:	71 e0       	ldi	r23, 0x01	; 1
     2ae:	81 e7       	ldi	r24, 0x71	; 113
     2b0:	92 e0       	ldi	r25, 0x02	; 2
     2b2:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN5Print7printlnEPKc>
	Serial.print("RSSI: "); Serial.print("-");
     2b6:	69 e1       	ldi	r22, 0x19	; 25
     2b8:	71 e0       	ldi	r23, 0x01	; 1
     2ba:	81 e7       	ldi	r24, 0x71	; 113
     2bc:	92 e0       	ldi	r25, 0x02	; 2
     2be:	0e 94 c5 04 	call	0x98a	; 0x98a <_ZN5Print5printEPKc>
     2c2:	60 e2       	ldi	r22, 0x20	; 32
     2c4:	71 e0       	ldi	r23, 0x01	; 1
     2c6:	81 e7       	ldi	r24, 0x71	; 113
     2c8:	92 e0       	ldi	r25, 0x02	; 2
     2ca:	0e 94 c5 04 	call	0x98a	; 0x98a <_ZN5Print5printEPKc>
     2ce:	7e 01       	movw	r14, r28
     2d0:	fc e2       	ldi	r31, 0x2C	; 44
     2d2:	ef 0e       	add	r14, r31
     2d4:	f1 1c       	adc	r15, r1
	for(int i = 0; i < 3; i++)
	{
		Serial.write(beacon.value_RSSI[i]);			//end write values to emulator
     2d6:	f8 01       	movw	r30, r16
     2d8:	61 91       	ld	r22, Z+
     2da:	8f 01       	movw	r16, r30
     2dc:	81 e7       	ldi	r24, 0x71	; 113
     2de:	92 e0       	ldi	r25, 0x02	; 2
     2e0:	0e 94 16 03 	call	0x62c	; 0x62c <_ZN14HardwareSerial5writeEh>
	{
		Serial.write(beacon.UUID[i]);
	}
	Serial.println("");
	Serial.print("RSSI: "); Serial.print("-");
	for(int i = 0; i < 3; i++)
     2e4:	e0 16       	cp	r14, r16
     2e6:	f1 06       	cpc	r15, r17
     2e8:	b1 f7       	brne	.-20     	; 0x2d6 <_Z12printBeacons16UUID_RSSI_values+0x74>
	{
		Serial.write(beacon.value_RSSI[i]);			//end write values to emulator
	}
	Serial.println("dbm");
     2ea:	62 e2       	ldi	r22, 0x22	; 34
     2ec:	71 e0       	ldi	r23, 0x01	; 1
     2ee:	81 e7       	ldi	r24, 0x71	; 113
     2f0:	92 e0       	ldi	r25, 0x02	; 2
     2f2:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN5Print7printlnEPKc>
}
     2f6:	df 91       	pop	r29
     2f8:	cf 91       	pop	r28
     2fa:	1f 91       	pop	r17
     2fc:	0f 91       	pop	r16
     2fe:	ff 90       	pop	r15
     300:	ef 90       	pop	r14
     302:	08 95       	ret

00000304 <_Z10saveBeaconi>:
{
  
}

int saveBeacon(int i)
{
     304:	0f 93       	push	r16
     306:	1f 93       	push	r17
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62
     310:	a3 97       	sbiw	r28, 0x23	; 35
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	de bf       	out	0x3e, r29	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	cd bf       	out	0x3d, r28	; 61
     31c:	8c 01       	movw	r16, r24
	switch(i)
     31e:	83 30       	cpi	r24, 0x03	; 3
     320:	91 05       	cpc	r25, r1
     322:	09 f4       	brne	.+2      	; 0x326 <_Z10saveBeaconi+0x22>
     324:	65 c0       	rjmp	.+202    	; 0x3f0 <_Z10saveBeaconi+0xec>
     326:	1c f5       	brge	.+70     	; 0x36e <_Z10saveBeaconi+0x6a>
     328:	81 30       	cpi	r24, 0x01	; 1
     32a:	91 05       	cpc	r25, r1
     32c:	09 f4       	brne	.+2      	; 0x330 <_Z10saveBeaconi+0x2c>
     32e:	44 c0       	rjmp	.+136    	; 0x3b8 <_Z10saveBeaconi+0xb4>
     330:	02 97       	sbiw	r24, 0x02	; 2
     332:	09 f0       	breq	.+2      	; 0x336 <_Z10saveBeaconi+0x32>
     334:	bb c0       	rjmp	.+374    	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
		case 1:
			beacon1 = getUUID_RSSI();
			printBeacons(beacon1);
			break;
		case 2:
			beacon2 = getUUID_RSSI();
     336:	ce 01       	movw	r24, r28
     338:	01 96       	adiw	r24, 0x01	; 1
     33a:	0e 94 04 01 	call	0x208	; 0x208 <_Z12getUUID_RSSIv>
     33e:	83 e2       	ldi	r24, 0x23	; 35
     340:	fe 01       	movw	r30, r28
     342:	31 96       	adiw	r30, 0x01	; 1
     344:	aa e0       	ldi	r26, 0x0A	; 10
     346:	b2 e0       	ldi	r27, 0x02	; 2
     348:	01 90       	ld	r0, Z+
     34a:	0d 92       	st	X+, r0
     34c:	8a 95       	dec	r24
     34e:	e1 f7       	brne	.-8      	; 0x348 <_Z10saveBeaconi+0x44>
			printBeacons(beacon2);
     350:	8d b7       	in	r24, 0x3d	; 61
     352:	9e b7       	in	r25, 0x3e	; 62
     354:	83 97       	sbiw	r24, 0x23	; 35
     356:	0f b6       	in	r0, 0x3f	; 63
     358:	f8 94       	cli
     35a:	9e bf       	out	0x3e, r25	; 62
     35c:	0f be       	out	0x3f, r0	; 63
     35e:	8d bf       	out	0x3d, r24	; 61
     360:	ad b7       	in	r26, 0x3d	; 61
     362:	be b7       	in	r27, 0x3e	; 62
     364:	11 96       	adiw	r26, 0x01	; 1
     366:	83 e2       	ldi	r24, 0x23	; 35
     368:	ea e0       	ldi	r30, 0x0A	; 10
     36a:	f2 e0       	ldi	r31, 0x02	; 2
     36c:	94 c0       	rjmp	.+296    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
  
}

int saveBeacon(int i)
{
	switch(i)
     36e:	85 30       	cpi	r24, 0x05	; 5
     370:	91 05       	cpc	r25, r1
     372:	09 f4       	brne	.+2      	; 0x376 <_Z10saveBeaconi+0x72>
     374:	75 c0       	rjmp	.+234    	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
     376:	0c f4       	brge	.+2      	; 0x37a <_Z10saveBeaconi+0x76>
     378:	57 c0       	rjmp	.+174    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     37a:	06 97       	sbiw	r24, 0x06	; 6
     37c:	09 f0       	breq	.+2      	; 0x380 <_Z10saveBeaconi+0x7c>
     37e:	96 c0       	rjmp	.+300    	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
		case 5:
			beacon5 = getUUID_RSSI();
			printBeacons(beacon5);
			break;
		case 6:
			beacon6 = getUUID_RSSI();
     380:	ce 01       	movw	r24, r28
     382:	01 96       	adiw	r24, 0x01	; 1
     384:	0e 94 04 01 	call	0x208	; 0x208 <_Z12getUUID_RSSIv>
     388:	83 e2       	ldi	r24, 0x23	; 35
     38a:	fe 01       	movw	r30, r28
     38c:	31 96       	adiw	r30, 0x01	; 1
     38e:	ae e7       	ldi	r26, 0x7E	; 126
     390:	b1 e0       	ldi	r27, 0x01	; 1
     392:	01 90       	ld	r0, Z+
     394:	0d 92       	st	X+, r0
     396:	8a 95       	dec	r24
     398:	e1 f7       	brne	.-8      	; 0x392 <_Z10saveBeaconi+0x8e>
			printBeacons(beacon6);
     39a:	8d b7       	in	r24, 0x3d	; 61
     39c:	9e b7       	in	r25, 0x3e	; 62
     39e:	83 97       	sbiw	r24, 0x23	; 35
     3a0:	0f b6       	in	r0, 0x3f	; 63
     3a2:	f8 94       	cli
     3a4:	9e bf       	out	0x3e, r25	; 62
     3a6:	0f be       	out	0x3f, r0	; 63
     3a8:	8d bf       	out	0x3d, r24	; 61
     3aa:	ad b7       	in	r26, 0x3d	; 61
     3ac:	be b7       	in	r27, 0x3e	; 62
     3ae:	11 96       	adiw	r26, 0x01	; 1
     3b0:	83 e2       	ldi	r24, 0x23	; 35
     3b2:	ee e7       	ldi	r30, 0x7E	; 126
     3b4:	f1 e0       	ldi	r31, 0x01	; 1
     3b6:	6f c0       	rjmp	.+222    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
int saveBeacon(int i)
{
	switch(i)
	{
		case 1:
			beacon1 = getUUID_RSSI();
     3b8:	ce 01       	movw	r24, r28
     3ba:	01 96       	adiw	r24, 0x01	; 1
     3bc:	0e 94 04 01 	call	0x208	; 0x208 <_Z12getUUID_RSSIv>
     3c0:	83 e2       	ldi	r24, 0x23	; 35
     3c2:	fe 01       	movw	r30, r28
     3c4:	31 96       	adiw	r30, 0x01	; 1
     3c6:	ad e2       	ldi	r26, 0x2D	; 45
     3c8:	b2 e0       	ldi	r27, 0x02	; 2
     3ca:	01 90       	ld	r0, Z+
     3cc:	0d 92       	st	X+, r0
     3ce:	8a 95       	dec	r24
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <_Z10saveBeaconi+0xc6>
			printBeacons(beacon1);
     3d2:	8d b7       	in	r24, 0x3d	; 61
     3d4:	9e b7       	in	r25, 0x3e	; 62
     3d6:	83 97       	sbiw	r24, 0x23	; 35
     3d8:	0f b6       	in	r0, 0x3f	; 63
     3da:	f8 94       	cli
     3dc:	9e bf       	out	0x3e, r25	; 62
     3de:	0f be       	out	0x3f, r0	; 63
     3e0:	8d bf       	out	0x3d, r24	; 61
     3e2:	ad b7       	in	r26, 0x3d	; 61
     3e4:	be b7       	in	r27, 0x3e	; 62
     3e6:	11 96       	adiw	r26, 0x01	; 1
     3e8:	83 e2       	ldi	r24, 0x23	; 35
     3ea:	ed e2       	ldi	r30, 0x2D	; 45
     3ec:	f2 e0       	ldi	r31, 0x02	; 2
     3ee:	53 c0       	rjmp	.+166    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
		case 2:
			beacon2 = getUUID_RSSI();
			printBeacons(beacon2);
			break;
		case 3:
			beacon3 = getUUID_RSSI();
     3f0:	ce 01       	movw	r24, r28
     3f2:	01 96       	adiw	r24, 0x01	; 1
     3f4:	0e 94 04 01 	call	0x208	; 0x208 <_Z12getUUID_RSSIv>
     3f8:	83 e2       	ldi	r24, 0x23	; 35
     3fa:	fe 01       	movw	r30, r28
     3fc:	31 96       	adiw	r30, 0x01	; 1
     3fe:	a7 ee       	ldi	r26, 0xE7	; 231
     400:	b1 e0       	ldi	r27, 0x01	; 1
     402:	01 90       	ld	r0, Z+
     404:	0d 92       	st	X+, r0
     406:	8a 95       	dec	r24
     408:	e1 f7       	brne	.-8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
			printBeacons(beacon3);
     40a:	8d b7       	in	r24, 0x3d	; 61
     40c:	9e b7       	in	r25, 0x3e	; 62
     40e:	83 97       	sbiw	r24, 0x23	; 35
     410:	0f b6       	in	r0, 0x3f	; 63
     412:	f8 94       	cli
     414:	9e bf       	out	0x3e, r25	; 62
     416:	0f be       	out	0x3f, r0	; 63
     418:	8d bf       	out	0x3d, r24	; 61
     41a:	ad b7       	in	r26, 0x3d	; 61
     41c:	be b7       	in	r27, 0x3e	; 62
     41e:	11 96       	adiw	r26, 0x01	; 1
     420:	83 e2       	ldi	r24, 0x23	; 35
     422:	e7 ee       	ldi	r30, 0xE7	; 231
     424:	f1 e0       	ldi	r31, 0x01	; 1
     426:	37 c0       	rjmp	.+110    	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
			break;
		case 4:
			beacon4 = getUUID_RSSI();
     428:	ce 01       	movw	r24, r28
     42a:	01 96       	adiw	r24, 0x01	; 1
     42c:	0e 94 04 01 	call	0x208	; 0x208 <_Z12getUUID_RSSIv>
     430:	83 e2       	ldi	r24, 0x23	; 35
     432:	fe 01       	movw	r30, r28
     434:	31 96       	adiw	r30, 0x01	; 1
     436:	a4 ec       	ldi	r26, 0xC4	; 196
     438:	b1 e0       	ldi	r27, 0x01	; 1
     43a:	01 90       	ld	r0, Z+
     43c:	0d 92       	st	X+, r0
     43e:	8a 95       	dec	r24
     440:	e1 f7       	brne	.-8      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
			printBeacons(beacon4);
     442:	8d b7       	in	r24, 0x3d	; 61
     444:	9e b7       	in	r25, 0x3e	; 62
     446:	83 97       	sbiw	r24, 0x23	; 35
     448:	0f b6       	in	r0, 0x3f	; 63
     44a:	f8 94       	cli
     44c:	9e bf       	out	0x3e, r25	; 62
     44e:	0f be       	out	0x3f, r0	; 63
     450:	8d bf       	out	0x3d, r24	; 61
     452:	ad b7       	in	r26, 0x3d	; 61
     454:	be b7       	in	r27, 0x3e	; 62
     456:	11 96       	adiw	r26, 0x01	; 1
     458:	83 e2       	ldi	r24, 0x23	; 35
     45a:	e4 ec       	ldi	r30, 0xC4	; 196
     45c:	f1 e0       	ldi	r31, 0x01	; 1
     45e:	1b c0       	rjmp	.+54     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
			break;
		case 5:
			beacon5 = getUUID_RSSI();
     460:	ce 01       	movw	r24, r28
     462:	01 96       	adiw	r24, 0x01	; 1
     464:	0e 94 04 01 	call	0x208	; 0x208 <_Z12getUUID_RSSIv>
     468:	83 e2       	ldi	r24, 0x23	; 35
     46a:	fe 01       	movw	r30, r28
     46c:	31 96       	adiw	r30, 0x01	; 1
     46e:	a1 ea       	ldi	r26, 0xA1	; 161
     470:	b1 e0       	ldi	r27, 0x01	; 1
     472:	01 90       	ld	r0, Z+
     474:	0d 92       	st	X+, r0
     476:	8a 95       	dec	r24
     478:	e1 f7       	brne	.-8      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
			printBeacons(beacon5);
     47a:	8d b7       	in	r24, 0x3d	; 61
     47c:	9e b7       	in	r25, 0x3e	; 62
     47e:	83 97       	sbiw	r24, 0x23	; 35
     480:	0f b6       	in	r0, 0x3f	; 63
     482:	f8 94       	cli
     484:	9e bf       	out	0x3e, r25	; 62
     486:	0f be       	out	0x3f, r0	; 63
     488:	8d bf       	out	0x3d, r24	; 61
     48a:	ad b7       	in	r26, 0x3d	; 61
     48c:	be b7       	in	r27, 0x3e	; 62
     48e:	11 96       	adiw	r26, 0x01	; 1
     490:	83 e2       	ldi	r24, 0x23	; 35
     492:	e1 ea       	ldi	r30, 0xA1	; 161
     494:	f1 e0       	ldi	r31, 0x01	; 1
			break;
		case 6:
			beacon6 = getUUID_RSSI();
			printBeacons(beacon6);
     496:	01 90       	ld	r0, Z+
     498:	0d 92       	st	X+, r0
     49a:	8a 95       	dec	r24
     49c:	e1 f7       	brne	.-8      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     49e:	0e 94 31 01 	call	0x262	; 0x262 <_Z12printBeacons16UUID_RSSI_values>
			break;
     4a2:	0f b6       	in	r0, 0x3f	; 63
     4a4:	f8 94       	cli
     4a6:	de bf       	out	0x3e, r29	; 62
     4a8:	0f be       	out	0x3f, r0	; 63
     4aa:	cd bf       	out	0x3d, r28	; 61
		default:
			//do nothing;
			break;
	}
	return i++;
}
     4ac:	c8 01       	movw	r24, r16
     4ae:	a3 96       	adiw	r28, 0x23	; 35
     4b0:	0f b6       	in	r0, 0x3f	; 63
     4b2:	f8 94       	cli
     4b4:	de bf       	out	0x3e, r29	; 62
     4b6:	0f be       	out	0x3f, r0	; 63
     4b8:	cd bf       	out	0x3d, r28	; 61
     4ba:	df 91       	pop	r29
     4bc:	cf 91       	pop	r28
     4be:	1f 91       	pop	r17
     4c0:	0f 91       	pop	r16
     4c2:	08 95       	ret

000004c4 <_Z4scanv>:
		}
	}		
}

void scan()
{
     4c4:	ff 92       	push	r15
     4c6:	0f 93       	push	r16
     4c8:	1f 93       	push	r17
     4ca:	cf 93       	push	r28
     4cc:	df 93       	push	r29
	int countBeacon = 1;
	sendCommand(2);
     4ce:	82 e0       	ldi	r24, 0x02	; 2
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	0e 94 a9 00 	call	0x152	; 0x152 <_Z11sendCommandi>
	}		
}

void scan()
{
	int countBeacon = 1;
     4d6:	01 e0       	ldi	r16, 0x01	; 1
     4d8:	10 e0       	ldi	r17, 0x00	; 0
	sendCommand(2);
	int mischa_koeffizient = 0;
	
	while(1)
	{
		mischa_koeffizient = readAnswer();
     4da:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
			
		if(mischa_koeffizient == 58)
     4de:	8a 33       	cpi	r24, 0x3A	; 58
     4e0:	91 05       	cpc	r25, r1
     4e2:	d9 f4       	brne	.+54     	; 0x51a <_Z4scanv+0x56>
     4e4:	c8 e0       	ldi	r28, 0x08	; 8
     4e6:	d0 e0       	ldi	r29, 0x00	; 0
     4e8:	ff 24       	eor	r15, r15
     4ea:	f3 94       	inc	r15
		{
			boolean state_zero = true;
       
			for(int i = 0; i < 8; i++)			//search for !=0 in FactoryID
			{         
				if(readAnswer() != 48)
     4ec:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     4f0:	c0 97       	sbiw	r24, 0x30	; 48
     4f2:	09 f0       	breq	.+2      	; 0x4f6 <_Z4scanv+0x32>
				{
					state_zero = false;
     4f4:	f1 2c       	mov	r15, r1
     4f6:	21 97       	sbiw	r28, 0x01	; 1
			
		if(mischa_koeffizient == 58)
		{
			boolean state_zero = true;
       
			for(int i = 0; i < 8; i++)			//search for !=0 in FactoryID
     4f8:	c9 f7       	brne	.-14     	; 0x4ec <_Z4scanv+0x28>
				if(readAnswer() != 48)
				{
					state_zero = false;
				}
			}
			if(state_zero == false)                             
     4fa:	f1 10       	cpse	r15, r1
     4fc:	05 c0       	rjmp	.+10     	; 0x508 <_Z4scanv+0x44>
			{
				state_zero = true;
				countBeacon = saveBeacon(countBeacon);
     4fe:	c8 01       	movw	r24, r16
     500:	0e 94 82 01 	call	0x304	; 0x304 <_Z10saveBeaconi>
     504:	8c 01       	movw	r16, r24
				continue;
     506:	e9 cf       	rjmp	.-46     	; 0x4da <_Z4scanv+0x16>
     508:	c4 e0       	ldi	r28, 0x04	; 4
     50a:	d0 e0       	ldi	r29, 0x00	; 0
			}
			else
			{
				for(int i = 0; i < 4; i++)
				{
					while(readAnswer() != 58)
     50c:	0e 94 c3 00 	call	0x186	; 0x186 <_Z10readAnswerv>
     510:	ca 97       	sbiw	r24, 0x3a	; 58
     512:	e1 f7       	brne	.-8      	; 0x50c <_Z4scanv+0x48>
     514:	21 97       	sbiw	r28, 0x01	; 1
				countBeacon = saveBeacon(countBeacon);
				continue;
			}
			else
			{
				for(int i = 0; i < 4; i++)
     516:	d1 f7       	brne	.-12     	; 0x50c <_Z4scanv+0x48>
     518:	e0 cf       	rjmp	.-64     	; 0x4da <_Z4scanv+0x16>
					{/*wait until ':' is recived*/}           
				}
				continue;
			}
		}
		else if (mischa_koeffizient == 69)
     51a:	85 34       	cpi	r24, 0x45	; 69
     51c:	91 05       	cpc	r25, r1
     51e:	e9 f6       	brne	.-70     	; 0x4da <_Z4scanv+0x16>
		{
			break;
		}
	}
}
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	1f 91       	pop	r17
     526:	0f 91       	pop	r16
     528:	ff 90       	pop	r15
     52a:	08 95       	ret

0000052c <loop>:
  
}

void loop()
{
	Serial.println("Start scanning...");
     52c:	66 e2       	ldi	r22, 0x26	; 38
     52e:	71 e0       	ldi	r23, 0x01	; 1
     530:	81 e7       	ldi	r24, 0x71	; 113
     532:	92 e0       	ldi	r25, 0x02	; 2
     534:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN5Print7printlnEPKc>
	scan();
     538:	0e 94 62 02 	call	0x4c4	; 0x4c4 <_Z4scanv>
	Serial.println("Finished scanning!");
     53c:	68 e3       	ldi	r22, 0x38	; 56
     53e:	71 e0       	ldi	r23, 0x01	; 1
     540:	81 e7       	ldi	r24, 0x71	; 113
     542:	92 e0       	ldi	r25, 0x02	; 2
     544:	0e 94 cb 04 	call	0x996	; 0x996 <_ZN5Print7printlnEPKc>
	delay(4000);
     548:	60 ea       	ldi	r22, 0xA0	; 160
     54a:	7f e0       	ldi	r23, 0x0F	; 15
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	0c 94 4c 05 	jmp	0xa98	; 0xa98 <delay>

00000554 <_ZN14HardwareSerial9availableEv>:
     554:	fc 01       	movw	r30, r24
     556:	91 8d       	ldd	r25, Z+25	; 0x19
     558:	22 8d       	ldd	r18, Z+26	; 0x1a
     55a:	89 2f       	mov	r24, r25
     55c:	90 e0       	ldi	r25, 0x00	; 0
     55e:	80 5c       	subi	r24, 0xC0	; 192
     560:	9f 4f       	sbci	r25, 0xFF	; 255
     562:	82 1b       	sub	r24, r18
     564:	91 09       	sbc	r25, r1
     566:	8f 73       	andi	r24, 0x3F	; 63
     568:	99 27       	eor	r25, r25
     56a:	08 95       	ret

0000056c <_ZN14HardwareSerial4peekEv>:
     56c:	fc 01       	movw	r30, r24
     56e:	91 8d       	ldd	r25, Z+25	; 0x19
     570:	82 8d       	ldd	r24, Z+26	; 0x1a
     572:	98 17       	cp	r25, r24
     574:	31 f0       	breq	.+12     	; 0x582 <_ZN14HardwareSerial4peekEv+0x16>
     576:	82 8d       	ldd	r24, Z+26	; 0x1a
     578:	e8 0f       	add	r30, r24
     57a:	f1 1d       	adc	r31, r1
     57c:	85 8d       	ldd	r24, Z+29	; 0x1d
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	08 95       	ret
     582:	8f ef       	ldi	r24, 0xFF	; 255
     584:	9f ef       	ldi	r25, 0xFF	; 255
     586:	08 95       	ret

00000588 <_ZN14HardwareSerial4readEv>:
     588:	fc 01       	movw	r30, r24
     58a:	91 8d       	ldd	r25, Z+25	; 0x19
     58c:	82 8d       	ldd	r24, Z+26	; 0x1a
     58e:	98 17       	cp	r25, r24
     590:	61 f0       	breq	.+24     	; 0x5aa <_ZN14HardwareSerial4readEv+0x22>
     592:	82 8d       	ldd	r24, Z+26	; 0x1a
     594:	df 01       	movw	r26, r30
     596:	a8 0f       	add	r26, r24
     598:	b1 1d       	adc	r27, r1
     59a:	5d 96       	adiw	r26, 0x1d	; 29
     59c:	8c 91       	ld	r24, X
     59e:	92 8d       	ldd	r25, Z+26	; 0x1a
     5a0:	9f 5f       	subi	r25, 0xFF	; 255
     5a2:	9f 73       	andi	r25, 0x3F	; 63
     5a4:	92 8f       	std	Z+26, r25	; 0x1a
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	08 95       	ret
     5aa:	8f ef       	ldi	r24, 0xFF	; 255
     5ac:	9f ef       	ldi	r25, 0xFF	; 255
     5ae:	08 95       	ret

000005b0 <_ZN14HardwareSerial17availableForWriteEv>:
     5b0:	fc 01       	movw	r30, r24
     5b2:	53 8d       	ldd	r21, Z+27	; 0x1b
     5b4:	44 8d       	ldd	r20, Z+28	; 0x1c
     5b6:	25 2f       	mov	r18, r21
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	84 2f       	mov	r24, r20
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	82 1b       	sub	r24, r18
     5c0:	93 0b       	sbc	r25, r19
     5c2:	54 17       	cp	r21, r20
     5c4:	10 f0       	brcs	.+4      	; 0x5ca <_ZN14HardwareSerial17availableForWriteEv+0x1a>
     5c6:	cf 96       	adiw	r24, 0x3f	; 63
     5c8:	08 95       	ret
     5ca:	01 97       	sbiw	r24, 0x01	; 1
     5cc:	08 95       	ret

000005ce <_Z14serialEventRunv>:
     5ce:	8f e3       	ldi	r24, 0x3F	; 63
     5d0:	94 e0       	ldi	r25, 0x04	; 4
     5d2:	89 2b       	or	r24, r25
     5d4:	49 f0       	breq	.+18     	; 0x5e8 <_Z14serialEventRunv+0x1a>
     5d6:	80 e0       	ldi	r24, 0x00	; 0
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	89 2b       	or	r24, r25
     5dc:	29 f0       	breq	.+10     	; 0x5e8 <_Z14serialEventRunv+0x1a>
     5de:	0e 94 3f 04 	call	0x87e	; 0x87e <_Z17Serial0_availablev>
     5e2:	81 11       	cpse	r24, r1
     5e4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
     5e8:	08 95       	ret

000005ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>:
     5ea:	fc 01       	movw	r30, r24
     5ec:	84 8d       	ldd	r24, Z+28	; 0x1c
     5ee:	df 01       	movw	r26, r30
     5f0:	a8 0f       	add	r26, r24
     5f2:	b1 1d       	adc	r27, r1
     5f4:	a3 5a       	subi	r26, 0xA3	; 163
     5f6:	bf 4f       	sbci	r27, 0xFF	; 255
     5f8:	2c 91       	ld	r18, X
     5fa:	84 8d       	ldd	r24, Z+28	; 0x1c
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	01 96       	adiw	r24, 0x01	; 1
     600:	8f 73       	andi	r24, 0x3F	; 63
     602:	99 27       	eor	r25, r25
     604:	84 8f       	std	Z+28, r24	; 0x1c
     606:	a6 89       	ldd	r26, Z+22	; 0x16
     608:	b7 89       	ldd	r27, Z+23	; 0x17
     60a:	2c 93       	st	X, r18
     60c:	a0 89       	ldd	r26, Z+16	; 0x10
     60e:	b1 89       	ldd	r27, Z+17	; 0x11
     610:	8c 91       	ld	r24, X
     612:	80 64       	ori	r24, 0x40	; 64
     614:	8c 93       	st	X, r24
     616:	93 8d       	ldd	r25, Z+27	; 0x1b
     618:	84 8d       	ldd	r24, Z+28	; 0x1c
     61a:	98 13       	cpse	r25, r24
     61c:	06 c0       	rjmp	.+12     	; 0x62a <_ZN14HardwareSerial17_tx_udr_empty_irqEv+0x40>
     61e:	02 88       	ldd	r0, Z+18	; 0x12
     620:	f3 89       	ldd	r31, Z+19	; 0x13
     622:	e0 2d       	mov	r30, r0
     624:	80 81       	ld	r24, Z
     626:	8f 7d       	andi	r24, 0xDF	; 223
     628:	80 83       	st	Z, r24
     62a:	08 95       	ret

0000062c <_ZN14HardwareSerial5writeEh>:
     62c:	ef 92       	push	r14
     62e:	ff 92       	push	r15
     630:	0f 93       	push	r16
     632:	1f 93       	push	r17
     634:	cf 93       	push	r28
     636:	df 93       	push	r29
     638:	ec 01       	movw	r28, r24
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	88 8f       	std	Y+24, r24	; 0x18
     63e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     640:	8c 8d       	ldd	r24, Y+28	; 0x1c
     642:	98 13       	cpse	r25, r24
     644:	05 c0       	rjmp	.+10     	; 0x650 <_ZN14HardwareSerial5writeEh+0x24>
     646:	e8 89       	ldd	r30, Y+16	; 0x10
     648:	f9 89       	ldd	r31, Y+17	; 0x11
     64a:	80 81       	ld	r24, Z
     64c:	85 fd       	sbrc	r24, 5
     64e:	24 c0       	rjmp	.+72     	; 0x698 <_ZN14HardwareSerial5writeEh+0x6c>
     650:	f6 2e       	mov	r15, r22
     652:	0b 8d       	ldd	r16, Y+27	; 0x1b
     654:	10 e0       	ldi	r17, 0x00	; 0
     656:	0f 5f       	subi	r16, 0xFF	; 255
     658:	1f 4f       	sbci	r17, 0xFF	; 255
     65a:	0f 73       	andi	r16, 0x3F	; 63
     65c:	11 27       	eor	r17, r17
     65e:	e0 2e       	mov	r14, r16
     660:	8c 8d       	ldd	r24, Y+28	; 0x1c
     662:	e8 12       	cpse	r14, r24
     664:	0c c0       	rjmp	.+24     	; 0x67e <_ZN14HardwareSerial5writeEh+0x52>
     666:	0f b6       	in	r0, 0x3f	; 63
     668:	07 fc       	sbrc	r0, 7
     66a:	fa cf       	rjmp	.-12     	; 0x660 <_ZN14HardwareSerial5writeEh+0x34>
     66c:	e8 89       	ldd	r30, Y+16	; 0x10
     66e:	f9 89       	ldd	r31, Y+17	; 0x11
     670:	80 81       	ld	r24, Z
     672:	85 ff       	sbrs	r24, 5
     674:	f5 cf       	rjmp	.-22     	; 0x660 <_ZN14HardwareSerial5writeEh+0x34>
     676:	ce 01       	movw	r24, r28
     678:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
     67c:	f1 cf       	rjmp	.-30     	; 0x660 <_ZN14HardwareSerial5writeEh+0x34>
     67e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     680:	fe 01       	movw	r30, r28
     682:	e8 0f       	add	r30, r24
     684:	f1 1d       	adc	r31, r1
     686:	e3 5a       	subi	r30, 0xA3	; 163
     688:	ff 4f       	sbci	r31, 0xFF	; 255
     68a:	f0 82       	st	Z, r15
     68c:	0b 8f       	std	Y+27, r16	; 0x1b
     68e:	ea 89       	ldd	r30, Y+18	; 0x12
     690:	fb 89       	ldd	r31, Y+19	; 0x13
     692:	80 81       	ld	r24, Z
     694:	80 62       	ori	r24, 0x20	; 32
     696:	07 c0       	rjmp	.+14     	; 0x6a6 <_ZN14HardwareSerial5writeEh+0x7a>
     698:	ee 89       	ldd	r30, Y+22	; 0x16
     69a:	ff 89       	ldd	r31, Y+23	; 0x17
     69c:	60 83       	st	Z, r22
     69e:	e8 89       	ldd	r30, Y+16	; 0x10
     6a0:	f9 89       	ldd	r31, Y+17	; 0x11
     6a2:	80 81       	ld	r24, Z
     6a4:	80 64       	ori	r24, 0x40	; 64
     6a6:	80 83       	st	Z, r24
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	df 91       	pop	r29
     6ae:	cf 91       	pop	r28
     6b0:	1f 91       	pop	r17
     6b2:	0f 91       	pop	r16
     6b4:	ff 90       	pop	r15
     6b6:	ef 90       	pop	r14
     6b8:	08 95       	ret

000006ba <_ZN14HardwareSerial5flushEv>:
     6ba:	cf 93       	push	r28
     6bc:	df 93       	push	r29
     6be:	ec 01       	movw	r28, r24
     6c0:	88 8d       	ldd	r24, Y+24	; 0x18
     6c2:	88 23       	and	r24, r24
     6c4:	c9 f0       	breq	.+50     	; 0x6f8 <_ZN14HardwareSerial5flushEv+0x3e>
     6c6:	ea 89       	ldd	r30, Y+18	; 0x12
     6c8:	fb 89       	ldd	r31, Y+19	; 0x13
     6ca:	80 81       	ld	r24, Z
     6cc:	85 fd       	sbrc	r24, 5
     6ce:	05 c0       	rjmp	.+10     	; 0x6da <_ZN14HardwareSerial5flushEv+0x20>
     6d0:	a8 89       	ldd	r26, Y+16	; 0x10
     6d2:	b9 89       	ldd	r27, Y+17	; 0x11
     6d4:	8c 91       	ld	r24, X
     6d6:	86 fd       	sbrc	r24, 6
     6d8:	0f c0       	rjmp	.+30     	; 0x6f8 <_ZN14HardwareSerial5flushEv+0x3e>
     6da:	0f b6       	in	r0, 0x3f	; 63
     6dc:	07 fc       	sbrc	r0, 7
     6de:	f5 cf       	rjmp	.-22     	; 0x6ca <_ZN14HardwareSerial5flushEv+0x10>
     6e0:	80 81       	ld	r24, Z
     6e2:	85 ff       	sbrs	r24, 5
     6e4:	f2 cf       	rjmp	.-28     	; 0x6ca <_ZN14HardwareSerial5flushEv+0x10>
     6e6:	a8 89       	ldd	r26, Y+16	; 0x10
     6e8:	b9 89       	ldd	r27, Y+17	; 0x11
     6ea:	8c 91       	ld	r24, X
     6ec:	85 ff       	sbrs	r24, 5
     6ee:	ed cf       	rjmp	.-38     	; 0x6ca <_ZN14HardwareSerial5flushEv+0x10>
     6f0:	ce 01       	movw	r24, r28
     6f2:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
     6f6:	e7 cf       	rjmp	.-50     	; 0x6c6 <_ZN14HardwareSerial5flushEv+0xc>
     6f8:	df 91       	pop	r29
     6fa:	cf 91       	pop	r28
     6fc:	08 95       	ret

000006fe <_ZN14HardwareSerial5beginEmh>:
     6fe:	cf 92       	push	r12
     700:	df 92       	push	r13
     702:	ef 92       	push	r14
     704:	ff 92       	push	r15
     706:	1f 93       	push	r17
     708:	cf 93       	push	r28
     70a:	df 93       	push	r29
     70c:	ec 01       	movw	r28, r24
     70e:	6a 01       	movw	r12, r20
     710:	7b 01       	movw	r14, r22
     712:	12 2f       	mov	r17, r18
     714:	e8 89       	ldd	r30, Y+16	; 0x10
     716:	f9 89       	ldd	r31, Y+17	; 0x11
     718:	82 e0       	ldi	r24, 0x02	; 2
     71a:	80 83       	st	Z, r24
     71c:	41 15       	cp	r20, r1
     71e:	51 4e       	sbci	r21, 0xE1	; 225
     720:	61 05       	cpc	r22, r1
     722:	71 05       	cpc	r23, r1
     724:	b1 f0       	breq	.+44     	; 0x752 <_ZN14HardwareSerial5beginEmh+0x54>
     726:	60 e0       	ldi	r22, 0x00	; 0
     728:	79 e0       	ldi	r23, 0x09	; 9
     72a:	8d e3       	ldi	r24, 0x3D	; 61
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	a7 01       	movw	r20, r14
     730:	96 01       	movw	r18, r12
     732:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__udivmodsi4>
     736:	da 01       	movw	r26, r20
     738:	c9 01       	movw	r24, r18
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	a1 09       	sbc	r26, r1
     73e:	b1 09       	sbc	r27, r1
     740:	b6 95       	lsr	r27
     742:	a7 95       	ror	r26
     744:	97 95       	ror	r25
     746:	87 95       	ror	r24
     748:	9c 01       	movw	r18, r24
     74a:	21 15       	cp	r18, r1
     74c:	80 e1       	ldi	r24, 0x10	; 16
     74e:	38 07       	cpc	r19, r24
     750:	a8 f0       	brcs	.+42     	; 0x77c <_ZN14HardwareSerial5beginEmh+0x7e>
     752:	e8 89       	ldd	r30, Y+16	; 0x10
     754:	f9 89       	ldd	r31, Y+17	; 0x11
     756:	10 82       	st	Z, r1
     758:	60 e8       	ldi	r22, 0x80	; 128
     75a:	74 e8       	ldi	r23, 0x84	; 132
     75c:	8e e1       	ldi	r24, 0x1E	; 30
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	a7 01       	movw	r20, r14
     762:	96 01       	movw	r18, r12
     764:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__udivmodsi4>
     768:	da 01       	movw	r26, r20
     76a:	c9 01       	movw	r24, r18
     76c:	01 97       	sbiw	r24, 0x01	; 1
     76e:	a1 09       	sbc	r26, r1
     770:	b1 09       	sbc	r27, r1
     772:	b6 95       	lsr	r27
     774:	a7 95       	ror	r26
     776:	97 95       	ror	r25
     778:	87 95       	ror	r24
     77a:	9c 01       	movw	r18, r24
     77c:	ec 85       	ldd	r30, Y+12	; 0x0c
     77e:	fd 85       	ldd	r31, Y+13	; 0x0d
     780:	30 83       	st	Z, r19
     782:	ee 85       	ldd	r30, Y+14	; 0x0e
     784:	ff 85       	ldd	r31, Y+15	; 0x0f
     786:	20 83       	st	Z, r18
     788:	18 8e       	std	Y+24, r1	; 0x18
     78a:	ec 89       	ldd	r30, Y+20	; 0x14
     78c:	fd 89       	ldd	r31, Y+21	; 0x15
     78e:	10 83       	st	Z, r17
     790:	ea 89       	ldd	r30, Y+18	; 0x12
     792:	fb 89       	ldd	r31, Y+19	; 0x13
     794:	80 81       	ld	r24, Z
     796:	80 61       	ori	r24, 0x10	; 16
     798:	80 83       	st	Z, r24
     79a:	ea 89       	ldd	r30, Y+18	; 0x12
     79c:	fb 89       	ldd	r31, Y+19	; 0x13
     79e:	80 81       	ld	r24, Z
     7a0:	88 60       	ori	r24, 0x08	; 8
     7a2:	80 83       	st	Z, r24
     7a4:	ea 89       	ldd	r30, Y+18	; 0x12
     7a6:	fb 89       	ldd	r31, Y+19	; 0x13
     7a8:	80 81       	ld	r24, Z
     7aa:	80 68       	ori	r24, 0x80	; 128
     7ac:	80 83       	st	Z, r24
     7ae:	ea 89       	ldd	r30, Y+18	; 0x12
     7b0:	fb 89       	ldd	r31, Y+19	; 0x13
     7b2:	80 81       	ld	r24, Z
     7b4:	8f 7d       	andi	r24, 0xDF	; 223
     7b6:	80 83       	st	Z, r24
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	1f 91       	pop	r17
     7be:	ff 90       	pop	r15
     7c0:	ef 90       	pop	r14
     7c2:	df 90       	pop	r13
     7c4:	cf 90       	pop	r12
     7c6:	08 95       	ret

000007c8 <_ZN5Print17availableForWriteEv>:
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	08 95       	ret

000007ce <__vector_18>:
     7ce:	1f 92       	push	r1
     7d0:	0f 92       	push	r0
     7d2:	0f b6       	in	r0, 0x3f	; 63
     7d4:	0f 92       	push	r0
     7d6:	11 24       	eor	r1, r1
     7d8:	2f 93       	push	r18
     7da:	8f 93       	push	r24
     7dc:	9f 93       	push	r25
     7de:	ef 93       	push	r30
     7e0:	ff 93       	push	r31
     7e2:	e0 91 81 02 	lds	r30, 0x0281	; 0x800281 <Serial+0x10>
     7e6:	f0 91 82 02 	lds	r31, 0x0282	; 0x800282 <Serial+0x11>
     7ea:	80 81       	ld	r24, Z
     7ec:	e0 91 87 02 	lds	r30, 0x0287	; 0x800287 <Serial+0x16>
     7f0:	f0 91 88 02 	lds	r31, 0x0288	; 0x800288 <Serial+0x17>
     7f4:	82 fd       	sbrc	r24, 2
     7f6:	12 c0       	rjmp	.+36     	; 0x81c <__vector_18+0x4e>
     7f8:	90 81       	ld	r25, Z
     7fa:	80 91 8a 02 	lds	r24, 0x028A	; 0x80028a <Serial+0x19>
     7fe:	8f 5f       	subi	r24, 0xFF	; 255
     800:	8f 73       	andi	r24, 0x3F	; 63
     802:	20 91 8b 02 	lds	r18, 0x028B	; 0x80028b <Serial+0x1a>
     806:	82 17       	cp	r24, r18
     808:	51 f0       	breq	.+20     	; 0x81e <__vector_18+0x50>
     80a:	e0 91 8a 02 	lds	r30, 0x028A	; 0x80028a <Serial+0x19>
     80e:	f0 e0       	ldi	r31, 0x00	; 0
     810:	ef 58       	subi	r30, 0x8F	; 143
     812:	fd 4f       	sbci	r31, 0xFD	; 253
     814:	95 8f       	std	Z+29, r25	; 0x1d
     816:	80 93 8a 02 	sts	0x028A, r24	; 0x80028a <Serial+0x19>
     81a:	01 c0       	rjmp	.+2      	; 0x81e <__vector_18+0x50>
     81c:	80 81       	ld	r24, Z
     81e:	ff 91       	pop	r31
     820:	ef 91       	pop	r30
     822:	9f 91       	pop	r25
     824:	8f 91       	pop	r24
     826:	2f 91       	pop	r18
     828:	0f 90       	pop	r0
     82a:	0f be       	out	0x3f, r0	; 63
     82c:	0f 90       	pop	r0
     82e:	1f 90       	pop	r1
     830:	18 95       	reti

00000832 <__vector_19>:
     832:	1f 92       	push	r1
     834:	0f 92       	push	r0
     836:	0f b6       	in	r0, 0x3f	; 63
     838:	0f 92       	push	r0
     83a:	11 24       	eor	r1, r1
     83c:	2f 93       	push	r18
     83e:	3f 93       	push	r19
     840:	4f 93       	push	r20
     842:	5f 93       	push	r21
     844:	6f 93       	push	r22
     846:	7f 93       	push	r23
     848:	8f 93       	push	r24
     84a:	9f 93       	push	r25
     84c:	af 93       	push	r26
     84e:	bf 93       	push	r27
     850:	ef 93       	push	r30
     852:	ff 93       	push	r31
     854:	81 e7       	ldi	r24, 0x71	; 113
     856:	92 e0       	ldi	r25, 0x02	; 2
     858:	0e 94 f5 02 	call	0x5ea	; 0x5ea <_ZN14HardwareSerial17_tx_udr_empty_irqEv>
     85c:	ff 91       	pop	r31
     85e:	ef 91       	pop	r30
     860:	bf 91       	pop	r27
     862:	af 91       	pop	r26
     864:	9f 91       	pop	r25
     866:	8f 91       	pop	r24
     868:	7f 91       	pop	r23
     86a:	6f 91       	pop	r22
     86c:	5f 91       	pop	r21
     86e:	4f 91       	pop	r20
     870:	3f 91       	pop	r19
     872:	2f 91       	pop	r18
     874:	0f 90       	pop	r0
     876:	0f be       	out	0x3f, r0	; 63
     878:	0f 90       	pop	r0
     87a:	1f 90       	pop	r1
     87c:	18 95       	reti

0000087e <_Z17Serial0_availablev>:
     87e:	81 e7       	ldi	r24, 0x71	; 113
     880:	92 e0       	ldi	r25, 0x02	; 2
     882:	0e 94 aa 02 	call	0x554	; 0x554 <_ZN14HardwareSerial9availableEv>
     886:	21 e0       	ldi	r18, 0x01	; 1
     888:	89 2b       	or	r24, r25
     88a:	09 f4       	brne	.+2      	; 0x88e <_Z17Serial0_availablev+0x10>
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	82 2f       	mov	r24, r18
     890:	08 95       	ret

00000892 <_GLOBAL__sub_I___vector_18>:
     892:	e1 e7       	ldi	r30, 0x71	; 113
     894:	f2 e0       	ldi	r31, 0x02	; 2
     896:	13 82       	std	Z+3, r1	; 0x03
     898:	12 82       	std	Z+2, r1	; 0x02
     89a:	88 ee       	ldi	r24, 0xE8	; 232
     89c:	93 e0       	ldi	r25, 0x03	; 3
     89e:	a0 e0       	ldi	r26, 0x00	; 0
     8a0:	b0 e0       	ldi	r27, 0x00	; 0
     8a2:	84 83       	std	Z+4, r24	; 0x04
     8a4:	95 83       	std	Z+5, r25	; 0x05
     8a6:	a6 83       	std	Z+6, r26	; 0x06
     8a8:	b7 83       	std	Z+7, r27	; 0x07
     8aa:	8f e4       	ldi	r24, 0x4F	; 79
     8ac:	91 e0       	ldi	r25, 0x01	; 1
     8ae:	91 83       	std	Z+1, r25	; 0x01
     8b0:	80 83       	st	Z, r24
     8b2:	85 ec       	ldi	r24, 0xC5	; 197
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	95 87       	std	Z+13, r25	; 0x0d
     8b8:	84 87       	std	Z+12, r24	; 0x0c
     8ba:	84 ec       	ldi	r24, 0xC4	; 196
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	97 87       	std	Z+15, r25	; 0x0f
     8c0:	86 87       	std	Z+14, r24	; 0x0e
     8c2:	80 ec       	ldi	r24, 0xC0	; 192
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	91 8b       	std	Z+17, r25	; 0x11
     8c8:	80 8b       	std	Z+16, r24	; 0x10
     8ca:	81 ec       	ldi	r24, 0xC1	; 193
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	93 8b       	std	Z+19, r25	; 0x13
     8d0:	82 8b       	std	Z+18, r24	; 0x12
     8d2:	82 ec       	ldi	r24, 0xC2	; 194
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	95 8b       	std	Z+21, r25	; 0x15
     8d8:	84 8b       	std	Z+20, r24	; 0x14
     8da:	86 ec       	ldi	r24, 0xC6	; 198
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	97 8b       	std	Z+23, r25	; 0x17
     8e0:	86 8b       	std	Z+22, r24	; 0x16
     8e2:	11 8e       	std	Z+25, r1	; 0x19
     8e4:	12 8e       	std	Z+26, r1	; 0x1a
     8e6:	13 8e       	std	Z+27, r1	; 0x1b
     8e8:	14 8e       	std	Z+28, r1	; 0x1c
     8ea:	08 95       	ret

000008ec <initVariant>:
     8ec:	08 95       	ret

000008ee <main>:
     8ee:	0e 94 88 05 	call	0xb10	; 0xb10 <init>
     8f2:	0e 94 76 04 	call	0x8ec	; 0x8ec <initVariant>
     8f6:	0e 94 ef 00 	call	0x1de	; 0x1de <setup>
     8fa:	c7 ee       	ldi	r28, 0xE7	; 231
     8fc:	d2 e0       	ldi	r29, 0x02	; 2
     8fe:	0e 94 96 02 	call	0x52c	; 0x52c <loop>
     902:	20 97       	sbiw	r28, 0x00	; 0
     904:	e1 f3       	breq	.-8      	; 0x8fe <main+0x10>
     906:	0e 94 e7 02 	call	0x5ce	; 0x5ce <_Z14serialEventRunv>
     90a:	f9 cf       	rjmp	.-14     	; 0x8fe <main+0x10>

0000090c <_ZN5Print5writeEPKhj>:
     90c:	cf 92       	push	r12
     90e:	df 92       	push	r13
     910:	ef 92       	push	r14
     912:	ff 92       	push	r15
     914:	0f 93       	push	r16
     916:	1f 93       	push	r17
     918:	cf 93       	push	r28
     91a:	df 93       	push	r29
     91c:	6c 01       	movw	r12, r24
     91e:	7a 01       	movw	r14, r20
     920:	8b 01       	movw	r16, r22
     922:	c0 e0       	ldi	r28, 0x00	; 0
     924:	d0 e0       	ldi	r29, 0x00	; 0
     926:	ce 15       	cp	r28, r14
     928:	df 05       	cpc	r29, r15
     92a:	81 f0       	breq	.+32     	; 0x94c <_ZN5Print5writeEPKhj+0x40>
     92c:	d8 01       	movw	r26, r16
     92e:	6d 91       	ld	r22, X+
     930:	8d 01       	movw	r16, r26
     932:	d6 01       	movw	r26, r12
     934:	ed 91       	ld	r30, X+
     936:	fc 91       	ld	r31, X
     938:	01 90       	ld	r0, Z+
     93a:	f0 81       	ld	r31, Z
     93c:	e0 2d       	mov	r30, r0
     93e:	c6 01       	movw	r24, r12
     940:	09 95       	icall
     942:	89 2b       	or	r24, r25
     944:	11 f0       	breq	.+4      	; 0x94a <_ZN5Print5writeEPKhj+0x3e>
     946:	21 96       	adiw	r28, 0x01	; 1
     948:	ee cf       	rjmp	.-36     	; 0x926 <_ZN5Print5writeEPKhj+0x1a>
     94a:	7e 01       	movw	r14, r28
     94c:	c7 01       	movw	r24, r14
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	1f 91       	pop	r17
     954:	0f 91       	pop	r16
     956:	ff 90       	pop	r15
     958:	ef 90       	pop	r14
     95a:	df 90       	pop	r13
     95c:	cf 90       	pop	r12
     95e:	08 95       	ret

00000960 <_ZN5Print5writeEPKc>:
     960:	61 15       	cp	r22, r1
     962:	71 05       	cpc	r23, r1
     964:	79 f0       	breq	.+30     	; 0x984 <_ZN5Print5writeEPKc+0x24>
     966:	fb 01       	movw	r30, r22
     968:	01 90       	ld	r0, Z+
     96a:	00 20       	and	r0, r0
     96c:	e9 f7       	brne	.-6      	; 0x968 <_ZN5Print5writeEPKc+0x8>
     96e:	31 97       	sbiw	r30, 0x01	; 1
     970:	af 01       	movw	r20, r30
     972:	46 1b       	sub	r20, r22
     974:	57 0b       	sbc	r21, r23
     976:	dc 01       	movw	r26, r24
     978:	ed 91       	ld	r30, X+
     97a:	fc 91       	ld	r31, X
     97c:	02 80       	ldd	r0, Z+2	; 0x02
     97e:	f3 81       	ldd	r31, Z+3	; 0x03
     980:	e0 2d       	mov	r30, r0
     982:	09 94       	ijmp
     984:	80 e0       	ldi	r24, 0x00	; 0
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	08 95       	ret

0000098a <_ZN5Print5printEPKc>:
     98a:	0c 94 b0 04 	jmp	0x960	; 0x960 <_ZN5Print5writeEPKc>

0000098e <_ZN5Print7printlnEv>:
     98e:	6d e5       	ldi	r22, 0x5D	; 93
     990:	71 e0       	ldi	r23, 0x01	; 1
     992:	0c 94 b0 04 	jmp	0x960	; 0x960 <_ZN5Print5writeEPKc>

00000996 <_ZN5Print7printlnEPKc>:
     996:	0f 93       	push	r16
     998:	1f 93       	push	r17
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	ec 01       	movw	r28, r24
     9a0:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN5Print5writeEPKc>
     9a4:	8c 01       	movw	r16, r24
     9a6:	ce 01       	movw	r24, r28
     9a8:	0e 94 c7 04 	call	0x98e	; 0x98e <_ZN5Print7printlnEv>
     9ac:	80 0f       	add	r24, r16
     9ae:	91 1f       	adc	r25, r17
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	1f 91       	pop	r17
     9b6:	0f 91       	pop	r16
     9b8:	08 95       	ret

000009ba <__vector_16>:
     9ba:	1f 92       	push	r1
     9bc:	0f 92       	push	r0
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	0f 92       	push	r0
     9c2:	11 24       	eor	r1, r1
     9c4:	2f 93       	push	r18
     9c6:	3f 93       	push	r19
     9c8:	8f 93       	push	r24
     9ca:	9f 93       	push	r25
     9cc:	af 93       	push	r26
     9ce:	bf 93       	push	r27
     9d0:	80 91 0f 03 	lds	r24, 0x030F	; 0x80030f <timer0_millis>
     9d4:	90 91 10 03 	lds	r25, 0x0310	; 0x800310 <timer0_millis+0x1>
     9d8:	a0 91 11 03 	lds	r26, 0x0311	; 0x800311 <timer0_millis+0x2>
     9dc:	b0 91 12 03 	lds	r27, 0x0312	; 0x800312 <timer0_millis+0x3>
     9e0:	30 91 0e 03 	lds	r19, 0x030E	; 0x80030e <timer0_fract>
     9e4:	23 e0       	ldi	r18, 0x03	; 3
     9e6:	23 0f       	add	r18, r19
     9e8:	2d 37       	cpi	r18, 0x7D	; 125
     9ea:	20 f4       	brcc	.+8      	; 0x9f4 <__vector_16+0x3a>
     9ec:	01 96       	adiw	r24, 0x01	; 1
     9ee:	a1 1d       	adc	r26, r1
     9f0:	b1 1d       	adc	r27, r1
     9f2:	05 c0       	rjmp	.+10     	; 0x9fe <__vector_16+0x44>
     9f4:	26 e8       	ldi	r18, 0x86	; 134
     9f6:	23 0f       	add	r18, r19
     9f8:	02 96       	adiw	r24, 0x02	; 2
     9fa:	a1 1d       	adc	r26, r1
     9fc:	b1 1d       	adc	r27, r1
     9fe:	20 93 0e 03 	sts	0x030E, r18	; 0x80030e <timer0_fract>
     a02:	80 93 0f 03 	sts	0x030F, r24	; 0x80030f <timer0_millis>
     a06:	90 93 10 03 	sts	0x0310, r25	; 0x800310 <timer0_millis+0x1>
     a0a:	a0 93 11 03 	sts	0x0311, r26	; 0x800311 <timer0_millis+0x2>
     a0e:	b0 93 12 03 	sts	0x0312, r27	; 0x800312 <timer0_millis+0x3>
     a12:	80 91 13 03 	lds	r24, 0x0313	; 0x800313 <timer0_overflow_count>
     a16:	90 91 14 03 	lds	r25, 0x0314	; 0x800314 <timer0_overflow_count+0x1>
     a1a:	a0 91 15 03 	lds	r26, 0x0315	; 0x800315 <timer0_overflow_count+0x2>
     a1e:	b0 91 16 03 	lds	r27, 0x0316	; 0x800316 <timer0_overflow_count+0x3>
     a22:	01 96       	adiw	r24, 0x01	; 1
     a24:	a1 1d       	adc	r26, r1
     a26:	b1 1d       	adc	r27, r1
     a28:	80 93 13 03 	sts	0x0313, r24	; 0x800313 <timer0_overflow_count>
     a2c:	90 93 14 03 	sts	0x0314, r25	; 0x800314 <timer0_overflow_count+0x1>
     a30:	a0 93 15 03 	sts	0x0315, r26	; 0x800315 <timer0_overflow_count+0x2>
     a34:	b0 93 16 03 	sts	0x0316, r27	; 0x800316 <timer0_overflow_count+0x3>
     a38:	bf 91       	pop	r27
     a3a:	af 91       	pop	r26
     a3c:	9f 91       	pop	r25
     a3e:	8f 91       	pop	r24
     a40:	3f 91       	pop	r19
     a42:	2f 91       	pop	r18
     a44:	0f 90       	pop	r0
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	0f 90       	pop	r0
     a4a:	1f 90       	pop	r1
     a4c:	18 95       	reti

00000a4e <micros>:
     a4e:	3f b7       	in	r19, 0x3f	; 63
     a50:	f8 94       	cli
     a52:	80 91 13 03 	lds	r24, 0x0313	; 0x800313 <timer0_overflow_count>
     a56:	90 91 14 03 	lds	r25, 0x0314	; 0x800314 <timer0_overflow_count+0x1>
     a5a:	a0 91 15 03 	lds	r26, 0x0315	; 0x800315 <timer0_overflow_count+0x2>
     a5e:	b0 91 16 03 	lds	r27, 0x0316	; 0x800316 <timer0_overflow_count+0x3>
     a62:	26 b5       	in	r18, 0x26	; 38
     a64:	a8 9b       	sbis	0x15, 0	; 21
     a66:	05 c0       	rjmp	.+10     	; 0xa72 <micros+0x24>
     a68:	2f 3f       	cpi	r18, 0xFF	; 255
     a6a:	19 f0       	breq	.+6      	; 0xa72 <micros+0x24>
     a6c:	01 96       	adiw	r24, 0x01	; 1
     a6e:	a1 1d       	adc	r26, r1
     a70:	b1 1d       	adc	r27, r1
     a72:	3f bf       	out	0x3f, r19	; 63
     a74:	ba 2f       	mov	r27, r26
     a76:	a9 2f       	mov	r26, r25
     a78:	98 2f       	mov	r25, r24
     a7a:	88 27       	eor	r24, r24
     a7c:	82 0f       	add	r24, r18
     a7e:	91 1d       	adc	r25, r1
     a80:	a1 1d       	adc	r26, r1
     a82:	b1 1d       	adc	r27, r1
     a84:	bc 01       	movw	r22, r24
     a86:	cd 01       	movw	r24, r26
     a88:	42 e0       	ldi	r20, 0x02	; 2
     a8a:	66 0f       	add	r22, r22
     a8c:	77 1f       	adc	r23, r23
     a8e:	88 1f       	adc	r24, r24
     a90:	99 1f       	adc	r25, r25
     a92:	4a 95       	dec	r20
     a94:	d1 f7       	brne	.-12     	; 0xa8a <micros+0x3c>
     a96:	08 95       	ret

00000a98 <delay>:
     a98:	8f 92       	push	r8
     a9a:	9f 92       	push	r9
     a9c:	af 92       	push	r10
     a9e:	bf 92       	push	r11
     aa0:	cf 92       	push	r12
     aa2:	df 92       	push	r13
     aa4:	ef 92       	push	r14
     aa6:	ff 92       	push	r15
     aa8:	6b 01       	movw	r12, r22
     aaa:	7c 01       	movw	r14, r24
     aac:	0e 94 27 05 	call	0xa4e	; 0xa4e <micros>
     ab0:	4b 01       	movw	r8, r22
     ab2:	5c 01       	movw	r10, r24
     ab4:	c1 14       	cp	r12, r1
     ab6:	d1 04       	cpc	r13, r1
     ab8:	e1 04       	cpc	r14, r1
     aba:	f1 04       	cpc	r15, r1
     abc:	01 f1       	breq	.+64     	; 0xafe <delay+0x66>
     abe:	0e 94 30 08 	call	0x1060	; 0x1060 <yield>
     ac2:	0e 94 27 05 	call	0xa4e	; 0xa4e <micros>
     ac6:	dc 01       	movw	r26, r24
     ac8:	cb 01       	movw	r24, r22
     aca:	88 19       	sub	r24, r8
     acc:	99 09       	sbc	r25, r9
     ace:	aa 09       	sbc	r26, r10
     ad0:	bb 09       	sbc	r27, r11
     ad2:	88 3e       	cpi	r24, 0xE8	; 232
     ad4:	93 40       	sbci	r25, 0x03	; 3
     ad6:	a1 05       	cpc	r26, r1
     ad8:	b1 05       	cpc	r27, r1
     ada:	60 f3       	brcs	.-40     	; 0xab4 <delay+0x1c>
     adc:	21 e0       	ldi	r18, 0x01	; 1
     ade:	c2 1a       	sub	r12, r18
     ae0:	d1 08       	sbc	r13, r1
     ae2:	e1 08       	sbc	r14, r1
     ae4:	f1 08       	sbc	r15, r1
     ae6:	88 ee       	ldi	r24, 0xE8	; 232
     ae8:	88 0e       	add	r8, r24
     aea:	83 e0       	ldi	r24, 0x03	; 3
     aec:	98 1e       	adc	r9, r24
     aee:	a1 1c       	adc	r10, r1
     af0:	b1 1c       	adc	r11, r1
     af2:	c1 14       	cp	r12, r1
     af4:	d1 04       	cpc	r13, r1
     af6:	e1 04       	cpc	r14, r1
     af8:	f1 04       	cpc	r15, r1
     afa:	19 f7       	brne	.-58     	; 0xac2 <delay+0x2a>
     afc:	db cf       	rjmp	.-74     	; 0xab4 <delay+0x1c>
     afe:	ff 90       	pop	r15
     b00:	ef 90       	pop	r14
     b02:	df 90       	pop	r13
     b04:	cf 90       	pop	r12
     b06:	bf 90       	pop	r11
     b08:	af 90       	pop	r10
     b0a:	9f 90       	pop	r9
     b0c:	8f 90       	pop	r8
     b0e:	08 95       	ret

00000b10 <init>:
     b10:	78 94       	sei
     b12:	84 b5       	in	r24, 0x24	; 36
     b14:	82 60       	ori	r24, 0x02	; 2
     b16:	84 bd       	out	0x24, r24	; 36
     b18:	84 b5       	in	r24, 0x24	; 36
     b1a:	81 60       	ori	r24, 0x01	; 1
     b1c:	84 bd       	out	0x24, r24	; 36
     b1e:	85 b5       	in	r24, 0x25	; 37
     b20:	82 60       	ori	r24, 0x02	; 2
     b22:	85 bd       	out	0x25, r24	; 37
     b24:	85 b5       	in	r24, 0x25	; 37
     b26:	81 60       	ori	r24, 0x01	; 1
     b28:	85 bd       	out	0x25, r24	; 37
     b2a:	ee e6       	ldi	r30, 0x6E	; 110
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	80 81       	ld	r24, Z
     b30:	81 60       	ori	r24, 0x01	; 1
     b32:	80 83       	st	Z, r24
     b34:	e1 e8       	ldi	r30, 0x81	; 129
     b36:	f0 e0       	ldi	r31, 0x00	; 0
     b38:	10 82       	st	Z, r1
     b3a:	80 81       	ld	r24, Z
     b3c:	82 60       	ori	r24, 0x02	; 2
     b3e:	80 83       	st	Z, r24
     b40:	80 81       	ld	r24, Z
     b42:	81 60       	ori	r24, 0x01	; 1
     b44:	80 83       	st	Z, r24
     b46:	e0 e8       	ldi	r30, 0x80	; 128
     b48:	f0 e0       	ldi	r31, 0x00	; 0
     b4a:	80 81       	ld	r24, Z
     b4c:	81 60       	ori	r24, 0x01	; 1
     b4e:	80 83       	st	Z, r24
     b50:	e1 eb       	ldi	r30, 0xB1	; 177
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	80 81       	ld	r24, Z
     b56:	84 60       	ori	r24, 0x04	; 4
     b58:	80 83       	st	Z, r24
     b5a:	e0 eb       	ldi	r30, 0xB0	; 176
     b5c:	f0 e0       	ldi	r31, 0x00	; 0
     b5e:	80 81       	ld	r24, Z
     b60:	81 60       	ori	r24, 0x01	; 1
     b62:	80 83       	st	Z, r24
     b64:	ea e7       	ldi	r30, 0x7A	; 122
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	80 81       	ld	r24, Z
     b6a:	84 60       	ori	r24, 0x04	; 4
     b6c:	80 83       	st	Z, r24
     b6e:	80 81       	ld	r24, Z
     b70:	82 60       	ori	r24, 0x02	; 2
     b72:	80 83       	st	Z, r24
     b74:	80 81       	ld	r24, Z
     b76:	81 60       	ori	r24, 0x01	; 1
     b78:	80 83       	st	Z, r24
     b7a:	80 81       	ld	r24, Z
     b7c:	80 68       	ori	r24, 0x80	; 128
     b7e:	80 83       	st	Z, r24
     b80:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     b84:	08 95       	ret

00000b86 <_ZN14SoftwareSerial4readEv>:
     b86:	20 91 59 03 	lds	r18, 0x0359	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     b8a:	30 91 5a 03 	lds	r19, 0x035A	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     b8e:	28 17       	cp	r18, r24
     b90:	39 07       	cpc	r19, r25
     b92:	b9 f4       	brne	.+46     	; 0xbc2 <_ZN14SoftwareSerial4readEv+0x3c>
     b94:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     b98:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     b9c:	98 17       	cp	r25, r24
     b9e:	89 f0       	breq	.+34     	; 0xbc2 <_ZN14SoftwareSerial4readEv+0x3c>
     ba0:	e0 91 17 03 	lds	r30, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     ba4:	f0 e0       	ldi	r31, 0x00	; 0
     ba6:	e7 5e       	subi	r30, 0xE7	; 231
     ba8:	fc 4f       	sbci	r31, 0xFC	; 252
     baa:	80 81       	ld	r24, Z
     bac:	20 91 17 03 	lds	r18, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	2f 5f       	subi	r18, 0xFF	; 255
     bb4:	3f 4f       	sbci	r19, 0xFF	; 255
     bb6:	2f 73       	andi	r18, 0x3F	; 63
     bb8:	33 27       	eor	r19, r19
     bba:	20 93 17 03 	sts	0x0317, r18	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	08 95       	ret
     bc2:	8f ef       	ldi	r24, 0xFF	; 255
     bc4:	9f ef       	ldi	r25, 0xFF	; 255
     bc6:	08 95       	ret

00000bc8 <_ZN14SoftwareSerial5writeEh>:
     bc8:	1f 93       	push	r17
     bca:	cf 93       	push	r28
     bcc:	df 93       	push	r29
     bce:	dc 01       	movw	r26, r24
     bd0:	5c 96       	adiw	r26, 0x1c	; 28
     bd2:	8d 91       	ld	r24, X+
     bd4:	9c 91       	ld	r25, X
     bd6:	5d 97       	sbiw	r26, 0x1d	; 29
     bd8:	00 97       	sbiw	r24, 0x00	; 0
     bda:	39 f4       	brne	.+14     	; 0xbea <_ZN14SoftwareSerial5writeEh+0x22>
     bdc:	21 e0       	ldi	r18, 0x01	; 1
     bde:	30 e0       	ldi	r19, 0x00	; 0
     be0:	13 96       	adiw	r26, 0x03	; 3
     be2:	3c 93       	st	X, r19
     be4:	2e 93       	st	-X, r18
     be6:	12 97       	sbiw	r26, 0x02	; 2
     be8:	3b c0       	rjmp	.+118    	; 0xc60 <_ZN14SoftwareSerial5writeEh+0x98>
     bea:	51 96       	adiw	r26, 0x11	; 17
     bec:	ed 91       	ld	r30, X+
     bee:	fc 91       	ld	r31, X
     bf0:	52 97       	sbiw	r26, 0x12	; 18
     bf2:	50 96       	adiw	r26, 0x10	; 16
     bf4:	2c 91       	ld	r18, X
     bf6:	50 97       	sbiw	r26, 0x10	; 16
     bf8:	32 2f       	mov	r19, r18
     bfa:	30 95       	com	r19
     bfc:	1f b7       	in	r17, 0x3f	; 63
     bfe:	5e 96       	adiw	r26, 0x1e	; 30
     c00:	4c 91       	ld	r20, X
     c02:	5e 97       	sbiw	r26, 0x1e	; 30
     c04:	74 2f       	mov	r23, r20
     c06:	72 70       	andi	r23, 0x02	; 2
     c08:	41 fd       	sbrc	r20, 1
     c0a:	60 95       	com	r22
     c0c:	f8 94       	cli
     c0e:	40 81       	ld	r20, Z
     c10:	77 23       	and	r23, r23
     c12:	11 f0       	breq	.+4      	; 0xc18 <_ZN14SoftwareSerial5writeEh+0x50>
     c14:	42 2b       	or	r20, r18
     c16:	01 c0       	rjmp	.+2      	; 0xc1a <_ZN14SoftwareSerial5writeEh+0x52>
     c18:	43 23       	and	r20, r19
     c1a:	40 83       	st	Z, r20
     c1c:	ec 01       	movw	r28, r24
     c1e:	21 97       	sbiw	r28, 0x01	; 1
     c20:	f1 f7       	brne	.-4      	; 0xc1e <_ZN14SoftwareSerial5writeEh+0x56>
     c22:	48 e0       	ldi	r20, 0x08	; 8
     c24:	50 81       	ld	r21, Z
     c26:	60 ff       	sbrs	r22, 0
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <_ZN14SoftwareSerial5writeEh+0x66>
     c2a:	52 2b       	or	r21, r18
     c2c:	01 c0       	rjmp	.+2      	; 0xc30 <_ZN14SoftwareSerial5writeEh+0x68>
     c2e:	53 23       	and	r21, r19
     c30:	50 83       	st	Z, r21
     c32:	ec 01       	movw	r28, r24
     c34:	21 97       	sbiw	r28, 0x01	; 1
     c36:	f1 f7       	brne	.-4      	; 0xc34 <_ZN14SoftwareSerial5writeEh+0x6c>
     c38:	66 95       	lsr	r22
     c3a:	41 50       	subi	r20, 0x01	; 1
     c3c:	99 f7       	brne	.-26     	; 0xc24 <_ZN14SoftwareSerial5writeEh+0x5c>
     c3e:	80 81       	ld	r24, Z
     c40:	77 23       	and	r23, r23
     c42:	19 f0       	breq	.+6      	; 0xc4a <_ZN14SoftwareSerial5writeEh+0x82>
     c44:	83 23       	and	r24, r19
     c46:	80 83       	st	Z, r24
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <_ZN14SoftwareSerial5writeEh+0x86>
     c4a:	28 2b       	or	r18, r24
     c4c:	20 83       	st	Z, r18
     c4e:	1f bf       	out	0x3f, r17	; 63
     c50:	5c 96       	adiw	r26, 0x1c	; 28
     c52:	8d 91       	ld	r24, X+
     c54:	9c 91       	ld	r25, X
     c56:	5d 97       	sbiw	r26, 0x1d	; 29
     c58:	01 97       	sbiw	r24, 0x01	; 1
     c5a:	f1 f7       	brne	.-4      	; 0xc58 <_ZN14SoftwareSerial5writeEh+0x90>
     c5c:	81 e0       	ldi	r24, 0x01	; 1
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	1f 91       	pop	r17
     c66:	08 95       	ret

00000c68 <_ZN14SoftwareSerial5flushEv>:
     c68:	08 95       	ret

00000c6a <_ZN14SoftwareSerial4peekEv>:
     c6a:	20 91 59 03 	lds	r18, 0x0359	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     c6e:	30 91 5a 03 	lds	r19, 0x035A	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     c72:	28 17       	cp	r18, r24
     c74:	39 07       	cpc	r19, r25
     c76:	71 f4       	brne	.+28     	; 0xc94 <_ZN14SoftwareSerial4peekEv+0x2a>
     c78:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     c7c:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     c80:	98 17       	cp	r25, r24
     c82:	41 f0       	breq	.+16     	; 0xc94 <_ZN14SoftwareSerial4peekEv+0x2a>
     c84:	e0 91 17 03 	lds	r30, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     c88:	f0 e0       	ldi	r31, 0x00	; 0
     c8a:	e7 5e       	subi	r30, 0xE7	; 231
     c8c:	fc 4f       	sbci	r31, 0xFC	; 252
     c8e:	80 81       	ld	r24, Z
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	08 95       	ret
     c94:	8f ef       	ldi	r24, 0xFF	; 255
     c96:	9f ef       	ldi	r25, 0xFF	; 255
     c98:	08 95       	ret

00000c9a <_ZN14SoftwareSerial9availableEv>:
     c9a:	20 91 59 03 	lds	r18, 0x0359	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     c9e:	30 91 5a 03 	lds	r19, 0x035A	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     ca2:	28 17       	cp	r18, r24
     ca4:	39 07       	cpc	r19, r25
     ca6:	71 f4       	brne	.+28     	; 0xcc4 <_ZN14SoftwareSerial9availableEv+0x2a>
     ca8:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     cac:	20 91 17 03 	lds	r18, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	80 5c       	subi	r24, 0xC0	; 192
     cb4:	9f 4f       	sbci	r25, 0xFF	; 255
     cb6:	82 1b       	sub	r24, r18
     cb8:	91 09       	sbc	r25, r1
     cba:	60 e4       	ldi	r22, 0x40	; 64
     cbc:	70 e0       	ldi	r23, 0x00	; 0
     cbe:	0e 94 c5 08 	call	0x118a	; 0x118a <__divmodhi4>
     cc2:	08 95       	ret
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	08 95       	ret

00000cca <_ZN14SoftwareSerial13stopListeningEv>:
     cca:	e0 91 59 03 	lds	r30, 0x0359	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     cce:	f0 91 5a 03 	lds	r31, 0x035A	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     cd2:	e8 17       	cp	r30, r24
     cd4:	f9 07       	cpc	r31, r25
     cd6:	69 f4       	brne	.+26     	; 0xcf2 <_ZN14SoftwareSerial13stopListeningEv+0x28>
     cd8:	a3 89       	ldd	r26, Z+19	; 0x13
     cda:	b4 89       	ldd	r27, Z+20	; 0x14
     cdc:	9c 91       	ld	r25, X
     cde:	85 89       	ldd	r24, Z+21	; 0x15
     ce0:	80 95       	com	r24
     ce2:	89 23       	and	r24, r25
     ce4:	8c 93       	st	X, r24
     ce6:	10 92 5a 03 	sts	0x035A, r1	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     cea:	10 92 59 03 	sts	0x0359, r1	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     cee:	81 e0       	ldi	r24, 0x01	; 1
     cf0:	08 95       	ret
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	08 95       	ret

00000cf6 <_ZN14SoftwareSerial6listenEv>:
     cf6:	cf 93       	push	r28
     cf8:	df 93       	push	r29
     cfa:	ec 01       	movw	r28, r24
     cfc:	8a 8d       	ldd	r24, Y+26	; 0x1a
     cfe:	9b 8d       	ldd	r25, Y+27	; 0x1b
     d00:	89 2b       	or	r24, r25
     d02:	f1 f0       	breq	.+60     	; 0xd40 <_ZN14SoftwareSerial6listenEv+0x4a>
     d04:	80 91 59 03 	lds	r24, 0x0359	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     d08:	90 91 5a 03 	lds	r25, 0x035A	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     d0c:	c8 17       	cp	r28, r24
     d0e:	d9 07       	cpc	r29, r25
     d10:	b9 f0       	breq	.+46     	; 0xd40 <_ZN14SoftwareSerial6listenEv+0x4a>
     d12:	00 97       	sbiw	r24, 0x00	; 0
     d14:	11 f0       	breq	.+4      	; 0xd1a <_ZN14SoftwareSerial6listenEv+0x24>
     d16:	0e 94 65 06 	call	0xcca	; 0xcca <_ZN14SoftwareSerial13stopListeningEv>
     d1a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     d1c:	8e 7f       	andi	r24, 0xFE	; 254
     d1e:	8e 8f       	std	Y+30, r24	; 0x1e
     d20:	10 92 18 03 	sts	0x0318, r1	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     d24:	10 92 17 03 	sts	0x0317, r1	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     d28:	d0 93 5a 03 	sts	0x035A, r29	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     d2c:	c0 93 59 03 	sts	0x0359, r28	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     d30:	eb 89       	ldd	r30, Y+19	; 0x13
     d32:	fc 89       	ldd	r31, Y+20	; 0x14
     d34:	90 81       	ld	r25, Z
     d36:	8d 89       	ldd	r24, Y+21	; 0x15
     d38:	89 2b       	or	r24, r25
     d3a:	80 83       	st	Z, r24
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	01 c0       	rjmp	.+2      	; 0xd42 <_ZN14SoftwareSerial6listenEv+0x4c>
     d40:	80 e0       	ldi	r24, 0x00	; 0
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	08 95       	ret

00000d48 <__vector_3>:
     d48:	1f 92       	push	r1
     d4a:	0f 92       	push	r0
     d4c:	0f b6       	in	r0, 0x3f	; 63
     d4e:	0f 92       	push	r0
     d50:	11 24       	eor	r1, r1
     d52:	2f 93       	push	r18
     d54:	3f 93       	push	r19
     d56:	4f 93       	push	r20
     d58:	5f 93       	push	r21
     d5a:	6f 93       	push	r22
     d5c:	7f 93       	push	r23
     d5e:	8f 93       	push	r24
     d60:	9f 93       	push	r25
     d62:	af 93       	push	r26
     d64:	bf 93       	push	r27
     d66:	ef 93       	push	r30
     d68:	ff 93       	push	r31
     d6a:	e0 91 59 03 	lds	r30, 0x0359	; 0x800359 <_ZN14SoftwareSerial13active_objectE>
     d6e:	f0 91 5a 03 	lds	r31, 0x035A	; 0x80035a <_ZN14SoftwareSerial13active_objectE+0x1>
     d72:	30 97       	sbiw	r30, 0x00	; 0
     d74:	09 f4       	brne	.+2      	; 0xd78 <__vector_3+0x30>
     d76:	51 c0       	rjmp	.+162    	; 0xe1a <__vector_3+0xd2>
     d78:	96 8d       	ldd	r25, Z+30	; 0x1e
     d7a:	a6 85       	ldd	r26, Z+14	; 0x0e
     d7c:	b7 85       	ldd	r27, Z+15	; 0x0f
     d7e:	85 85       	ldd	r24, Z+13	; 0x0d
     d80:	91 ff       	sbrs	r25, 1
     d82:	04 c0       	rjmp	.+8      	; 0xd8c <__vector_3+0x44>
     d84:	9c 91       	ld	r25, X
     d86:	89 23       	and	r24, r25
     d88:	29 f4       	brne	.+10     	; 0xd94 <__vector_3+0x4c>
     d8a:	47 c0       	rjmp	.+142    	; 0xe1a <__vector_3+0xd2>
     d8c:	9c 91       	ld	r25, X
     d8e:	89 23       	and	r24, r25
     d90:	09 f0       	breq	.+2      	; 0xd94 <__vector_3+0x4c>
     d92:	43 c0       	rjmp	.+134    	; 0xe1a <__vector_3+0xd2>
     d94:	a3 89       	ldd	r26, Z+19	; 0x13
     d96:	b4 89       	ldd	r27, Z+20	; 0x14
     d98:	9c 91       	ld	r25, X
     d9a:	85 89       	ldd	r24, Z+21	; 0x15
     d9c:	80 95       	com	r24
     d9e:	89 23       	and	r24, r25
     da0:	8c 93       	st	X, r24
     da2:	86 89       	ldd	r24, Z+22	; 0x16
     da4:	97 89       	ldd	r25, Z+23	; 0x17
     da6:	01 97       	sbiw	r24, 0x01	; 1
     da8:	f1 f7       	brne	.-4      	; 0xda6 <__vector_3+0x5e>
     daa:	60 8d       	ldd	r22, Z+24	; 0x18
     dac:	71 8d       	ldd	r23, Z+25	; 0x19
     dae:	a6 85       	ldd	r26, Z+14	; 0x0e
     db0:	b7 85       	ldd	r27, Z+15	; 0x0f
     db2:	55 85       	ldd	r21, Z+13	; 0x0d
     db4:	38 e0       	ldi	r19, 0x08	; 8
     db6:	20 e0       	ldi	r18, 0x00	; 0
     db8:	cb 01       	movw	r24, r22
     dba:	01 97       	sbiw	r24, 0x01	; 1
     dbc:	f1 f7       	brne	.-4      	; 0xdba <__vector_3+0x72>
     dbe:	82 2f       	mov	r24, r18
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	95 95       	asr	r25
     dc4:	87 95       	ror	r24
     dc6:	28 2f       	mov	r18, r24
     dc8:	4c 91       	ld	r20, X
     dca:	45 23       	and	r20, r21
     dcc:	09 f0       	breq	.+2      	; 0xdd0 <__vector_3+0x88>
     dce:	20 68       	ori	r18, 0x80	; 128
     dd0:	31 50       	subi	r19, 0x01	; 1
     dd2:	91 f7       	brne	.-28     	; 0xdb8 <__vector_3+0x70>
     dd4:	86 8d       	ldd	r24, Z+30	; 0x1e
     dd6:	81 fd       	sbrc	r24, 1
     dd8:	20 95       	com	r18
     dda:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	01 96       	adiw	r24, 0x01	; 1
     de2:	8f 73       	andi	r24, 0x3F	; 63
     de4:	99 27       	eor	r25, r25
     de6:	30 91 17 03 	lds	r19, 0x0317	; 0x800317 <_ZN14SoftwareSerial20_receive_buffer_headE>
     dea:	38 17       	cp	r19, r24
     dec:	49 f0       	breq	.+18     	; 0xe00 <__vector_3+0xb8>
     dee:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	a7 5e       	subi	r26, 0xE7	; 231
     df6:	bc 4f       	sbci	r27, 0xFC	; 252
     df8:	2c 93       	st	X, r18
     dfa:	80 93 18 03 	sts	0x0318, r24	; 0x800318 <_ZN14SoftwareSerial20_receive_buffer_tailE>
     dfe:	03 c0       	rjmp	.+6      	; 0xe06 <__vector_3+0xbe>
     e00:	86 8d       	ldd	r24, Z+30	; 0x1e
     e02:	81 60       	ori	r24, 0x01	; 1
     e04:	86 8f       	std	Z+30, r24	; 0x1e
     e06:	82 8d       	ldd	r24, Z+26	; 0x1a
     e08:	93 8d       	ldd	r25, Z+27	; 0x1b
     e0a:	01 97       	sbiw	r24, 0x01	; 1
     e0c:	f1 f7       	brne	.-4      	; 0xe0a <__vector_3+0xc2>
     e0e:	a3 89       	ldd	r26, Z+19	; 0x13
     e10:	b4 89       	ldd	r27, Z+20	; 0x14
     e12:	9c 91       	ld	r25, X
     e14:	85 89       	ldd	r24, Z+21	; 0x15
     e16:	89 2b       	or	r24, r25
     e18:	8c 93       	st	X, r24
     e1a:	ff 91       	pop	r31
     e1c:	ef 91       	pop	r30
     e1e:	bf 91       	pop	r27
     e20:	af 91       	pop	r26
     e22:	9f 91       	pop	r25
     e24:	8f 91       	pop	r24
     e26:	7f 91       	pop	r23
     e28:	6f 91       	pop	r22
     e2a:	5f 91       	pop	r21
     e2c:	4f 91       	pop	r20
     e2e:	3f 91       	pop	r19
     e30:	2f 91       	pop	r18
     e32:	0f 90       	pop	r0
     e34:	0f be       	out	0x3f, r0	; 63
     e36:	0f 90       	pop	r0
     e38:	1f 90       	pop	r1
     e3a:	18 95       	reti

00000e3c <_ZN14SoftwareSerialD1Ev>:
     e3c:	20 e7       	ldi	r18, 0x70	; 112
     e3e:	31 e0       	ldi	r19, 0x01	; 1
     e40:	fc 01       	movw	r30, r24
     e42:	31 83       	std	Z+1, r19	; 0x01
     e44:	20 83       	st	Z, r18
     e46:	0c 94 65 06 	jmp	0xcca	; 0xcca <_ZN14SoftwareSerial13stopListeningEv>

00000e4a <_ZN14SoftwareSerial5setTXEh>:
     e4a:	1f 93       	push	r17
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
     e50:	ec 01       	movw	r28, r24
     e52:	16 2f       	mov	r17, r22
     e54:	6e 8d       	ldd	r22, Y+30	; 0x1e
     e56:	66 95       	lsr	r22
     e58:	61 70       	andi	r22, 0x01	; 1
     e5a:	81 e0       	ldi	r24, 0x01	; 1
     e5c:	68 27       	eor	r22, r24
     e5e:	81 2f       	mov	r24, r17
     e60:	0e 94 96 08 	call	0x112c	; 0x112c <digitalWrite>
     e64:	61 e0       	ldi	r22, 0x01	; 1
     e66:	81 2f       	mov	r24, r17
     e68:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <pinMode>
     e6c:	81 2f       	mov	r24, r17
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	fc 01       	movw	r30, r24
     e72:	e4 58       	subi	r30, 0x84	; 132
     e74:	ff 4f       	sbci	r31, 0xFF	; 255
     e76:	e4 91       	lpm	r30, Z
     e78:	e8 8b       	std	Y+16, r30	; 0x10
     e7a:	fc 01       	movw	r30, r24
     e7c:	e0 57       	subi	r30, 0x70	; 112
     e7e:	ff 4f       	sbci	r31, 0xFF	; 255
     e80:	e4 91       	lpm	r30, Z
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	ee 0f       	add	r30, r30
     e86:	ff 1f       	adc	r31, r31
     e88:	e2 55       	subi	r30, 0x52	; 82
     e8a:	ff 4f       	sbci	r31, 0xFF	; 255
     e8c:	85 91       	lpm	r24, Z+
     e8e:	94 91       	lpm	r25, Z
     e90:	9a 8b       	std	Y+18, r25	; 0x12
     e92:	89 8b       	std	Y+17, r24	; 0x11
     e94:	df 91       	pop	r29
     e96:	cf 91       	pop	r28
     e98:	1f 91       	pop	r17
     e9a:	08 95       	ret

00000e9c <_ZN14SoftwareSerial5setRXEh>:
     e9c:	1f 93       	push	r17
     e9e:	cf 93       	push	r28
     ea0:	df 93       	push	r29
     ea2:	ec 01       	movw	r28, r24
     ea4:	16 2f       	mov	r17, r22
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	81 2f       	mov	r24, r17
     eaa:	0e 94 5a 08 	call	0x10b4	; 0x10b4 <pinMode>
     eae:	8e 8d       	ldd	r24, Y+30	; 0x1e
     eb0:	81 fd       	sbrc	r24, 1
     eb2:	04 c0       	rjmp	.+8      	; 0xebc <_ZN14SoftwareSerial5setRXEh+0x20>
     eb4:	61 e0       	ldi	r22, 0x01	; 1
     eb6:	81 2f       	mov	r24, r17
     eb8:	0e 94 96 08 	call	0x112c	; 0x112c <digitalWrite>
     ebc:	1c 87       	std	Y+12, r17	; 0x0c
     ebe:	81 2f       	mov	r24, r17
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	fc 01       	movw	r30, r24
     ec4:	e4 58       	subi	r30, 0x84	; 132
     ec6:	ff 4f       	sbci	r31, 0xFF	; 255
     ec8:	e4 91       	lpm	r30, Z
     eca:	ed 87       	std	Y+13, r30	; 0x0d
     ecc:	fc 01       	movw	r30, r24
     ece:	e0 57       	subi	r30, 0x70	; 112
     ed0:	ff 4f       	sbci	r31, 0xFF	; 255
     ed2:	e4 91       	lpm	r30, Z
     ed4:	f0 e0       	ldi	r31, 0x00	; 0
     ed6:	ee 0f       	add	r30, r30
     ed8:	ff 1f       	adc	r31, r31
     eda:	ec 55       	subi	r30, 0x5C	; 92
     edc:	ff 4f       	sbci	r31, 0xFF	; 255
     ede:	85 91       	lpm	r24, Z+
     ee0:	94 91       	lpm	r25, Z
     ee2:	9f 87       	std	Y+15, r25	; 0x0f
     ee4:	8e 87       	std	Y+14, r24	; 0x0e
     ee6:	df 91       	pop	r29
     ee8:	cf 91       	pop	r28
     eea:	1f 91       	pop	r17
     eec:	08 95       	ret

00000eee <_ZN14SoftwareSerialC1Ehhb>:
     eee:	1f 93       	push	r17
     ef0:	cf 93       	push	r28
     ef2:	df 93       	push	r29
     ef4:	ec 01       	movw	r28, r24
     ef6:	16 2f       	mov	r17, r22
     ef8:	1b 82       	std	Y+3, r1	; 0x03
     efa:	1a 82       	std	Y+2, r1	; 0x02
     efc:	88 ee       	ldi	r24, 0xE8	; 232
     efe:	93 e0       	ldi	r25, 0x03	; 3
     f00:	a0 e0       	ldi	r26, 0x00	; 0
     f02:	b0 e0       	ldi	r27, 0x00	; 0
     f04:	8c 83       	std	Y+4, r24	; 0x04
     f06:	9d 83       	std	Y+5, r25	; 0x05
     f08:	ae 83       	std	Y+6, r26	; 0x06
     f0a:	bf 83       	std	Y+7, r27	; 0x07
     f0c:	80 e7       	ldi	r24, 0x70	; 112
     f0e:	91 e0       	ldi	r25, 0x01	; 1
     f10:	99 83       	std	Y+1, r25	; 0x01
     f12:	88 83       	st	Y, r24
     f14:	1f 8a       	std	Y+23, r1	; 0x17
     f16:	1e 8a       	std	Y+22, r1	; 0x16
     f18:	19 8e       	std	Y+25, r1	; 0x19
     f1a:	18 8e       	std	Y+24, r1	; 0x18
     f1c:	1b 8e       	std	Y+27, r1	; 0x1b
     f1e:	1a 8e       	std	Y+26, r1	; 0x1a
     f20:	1d 8e       	std	Y+29, r1	; 0x1d
     f22:	1c 8e       	std	Y+28, r1	; 0x1c
     f24:	8e 8d       	ldd	r24, Y+30	; 0x1e
     f26:	8e 7f       	andi	r24, 0xFE	; 254
     f28:	20 fb       	bst	r18, 0
     f2a:	81 f9       	bld	r24, 1
     f2c:	8e 8f       	std	Y+30, r24	; 0x1e
     f2e:	64 2f       	mov	r22, r20
     f30:	ce 01       	movw	r24, r28
     f32:	0e 94 25 07 	call	0xe4a	; 0xe4a <_ZN14SoftwareSerial5setTXEh>
     f36:	61 2f       	mov	r22, r17
     f38:	ce 01       	movw	r24, r28
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	1f 91       	pop	r17
     f40:	0c 94 4e 07 	jmp	0xe9c	; 0xe9c <_ZN14SoftwareSerial5setRXEh>

00000f44 <_ZN14SoftwareSerial5beginEl>:
     f44:	cf 93       	push	r28
     f46:	df 93       	push	r29
     f48:	ec 01       	movw	r28, r24
     f4a:	9a 01       	movw	r18, r20
     f4c:	ab 01       	movw	r20, r22
     f4e:	1b 8e       	std	Y+27, r1	; 0x1b
     f50:	1a 8e       	std	Y+26, r1	; 0x1a
     f52:	19 8e       	std	Y+25, r1	; 0x19
     f54:	18 8e       	std	Y+24, r1	; 0x18
     f56:	1f 8a       	std	Y+23, r1	; 0x17
     f58:	1e 8a       	std	Y+22, r1	; 0x16
     f5a:	60 e0       	ldi	r22, 0x00	; 0
     f5c:	79 e0       	ldi	r23, 0x09	; 9
     f5e:	8d e3       	ldi	r24, 0x3D	; 61
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <__divmodsi4>
     f66:	f9 01       	movw	r30, r18
     f68:	24 30       	cpi	r18, 0x04	; 4
     f6a:	31 05       	cpc	r19, r1
     f6c:	18 f0       	brcs	.+6      	; 0xf74 <_ZN14SoftwareSerial5beginEl+0x30>
     f6e:	c9 01       	movw	r24, r18
     f70:	03 97       	sbiw	r24, 0x03	; 3
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <_ZN14SoftwareSerial5beginEl+0x34>
     f74:	81 e0       	ldi	r24, 0x01	; 1
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	9d 8f       	std	Y+29, r25	; 0x1d
     f7a:	8c 8f       	std	Y+28, r24	; 0x1c
     f7c:	6c 85       	ldd	r22, Y+12	; 0x0c
     f7e:	66 31       	cpi	r22, 0x16	; 22
     f80:	08 f0       	brcs	.+2      	; 0xf84 <_ZN14SoftwareSerial5beginEl+0x40>
     f82:	69 c0       	rjmp	.+210    	; 0x1056 <_ZN14SoftwareSerial5beginEl+0x112>
     f84:	c9 01       	movw	r24, r18
     f86:	96 95       	lsr	r25
     f88:	87 95       	ror	r24
     f8a:	84 31       	cpi	r24, 0x14	; 20
     f8c:	91 05       	cpc	r25, r1
     f8e:	10 f0       	brcs	.+4      	; 0xf94 <_ZN14SoftwareSerial5beginEl+0x50>
     f90:	43 97       	sbiw	r24, 0x13	; 19
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <_ZN14SoftwareSerial5beginEl+0x54>
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	9f 8b       	std	Y+23, r25	; 0x17
     f9a:	8e 8b       	std	Y+22, r24	; 0x16
     f9c:	36 97       	sbiw	r30, 0x06	; 6
     f9e:	18 f0       	brcs	.+6      	; 0xfa6 <_ZN14SoftwareSerial5beginEl+0x62>
     fa0:	c9 01       	movw	r24, r18
     fa2:	05 97       	sbiw	r24, 0x05	; 5
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <_ZN14SoftwareSerial5beginEl+0x66>
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	99 8f       	std	Y+25, r25	; 0x19
     fac:	88 8f       	std	Y+24, r24	; 0x18
     fae:	c9 01       	movw	r24, r18
     fb0:	88 0f       	add	r24, r24
     fb2:	99 1f       	adc	r25, r25
     fb4:	28 0f       	add	r18, r24
     fb6:	39 1f       	adc	r19, r25
     fb8:	36 95       	lsr	r19
     fba:	27 95       	ror	r18
     fbc:	36 95       	lsr	r19
     fbe:	27 95       	ror	r18
     fc0:	2d 30       	cpi	r18, 0x0D	; 13
     fc2:	31 05       	cpc	r19, r1
     fc4:	18 f0       	brcs	.+6      	; 0xfcc <_ZN14SoftwareSerial5beginEl+0x88>
     fc6:	2c 50       	subi	r18, 0x0C	; 12
     fc8:	31 09       	sbc	r19, r1
     fca:	02 c0       	rjmp	.+4      	; 0xfd0 <_ZN14SoftwareSerial5beginEl+0x8c>
     fcc:	21 e0       	ldi	r18, 0x01	; 1
     fce:	30 e0       	ldi	r19, 0x00	; 0
     fd0:	3b 8f       	std	Y+27, r19	; 0x1b
     fd2:	2a 8f       	std	Y+26, r18	; 0x1a
     fd4:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
     fd8:	68 30       	cpi	r22, 0x08	; 8
     fda:	50 f0       	brcs	.+20     	; 0xff0 <_ZN14SoftwareSerial5beginEl+0xac>
     fdc:	21 e0       	ldi	r18, 0x01	; 1
     fde:	6e 30       	cpi	r22, 0x0E	; 14
     fe0:	08 f4       	brcc	.+2      	; 0xfe4 <_ZN14SoftwareSerial5beginEl+0xa0>
     fe2:	20 e0       	ldi	r18, 0x00	; 0
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	01 c0       	rjmp	.+2      	; 0xfea <_ZN14SoftwareSerial5beginEl+0xa6>
     fe8:	88 0f       	add	r24, r24
     fea:	2a 95       	dec	r18
     fec:	ea f7       	brpl	.-6      	; 0xfe8 <_ZN14SoftwareSerial5beginEl+0xa4>
     fee:	01 c0       	rjmp	.+2      	; 0xff2 <_ZN14SoftwareSerial5beginEl+0xae>
     ff0:	84 e0       	ldi	r24, 0x04	; 4
     ff2:	89 2b       	or	r24, r25
     ff4:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
     ff8:	9c 85       	ldd	r25, Y+12	; 0x0c
     ffa:	98 30       	cpi	r25, 0x08	; 8
     ffc:	38 f0       	brcs	.+14     	; 0x100c <_ZN14SoftwareSerial5beginEl+0xc8>
     ffe:	9e 30       	cpi	r25, 0x0E	; 14
    1000:	40 f0       	brcs	.+16     	; 0x1012 <_ZN14SoftwareSerial5beginEl+0xce>
    1002:	96 31       	cpi	r25, 0x16	; 22
    1004:	48 f0       	brcs	.+18     	; 0x1018 <_ZN14SoftwareSerial5beginEl+0xd4>
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	08 c0       	rjmp	.+16     	; 0x101c <_ZN14SoftwareSerial5beginEl+0xd8>
    100c:	2d e6       	ldi	r18, 0x6D	; 109
    100e:	30 e0       	ldi	r19, 0x00	; 0
    1010:	05 c0       	rjmp	.+10     	; 0x101c <_ZN14SoftwareSerial5beginEl+0xd8>
    1012:	2b e6       	ldi	r18, 0x6B	; 107
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	02 c0       	rjmp	.+4      	; 0x101c <_ZN14SoftwareSerial5beginEl+0xd8>
    1018:	2c e6       	ldi	r18, 0x6C	; 108
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	3c 8b       	std	Y+20, r19	; 0x14
    101e:	2b 8b       	std	Y+19, r18	; 0x13
    1020:	98 30       	cpi	r25, 0x08	; 8
    1022:	30 f4       	brcc	.+12     	; 0x1030 <_ZN14SoftwareSerial5beginEl+0xec>
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	01 c0       	rjmp	.+2      	; 0x102a <_ZN14SoftwareSerial5beginEl+0xe6>
    1028:	88 0f       	add	r24, r24
    102a:	9a 95       	dec	r25
    102c:	ea f7       	brpl	.-6      	; 0x1028 <_ZN14SoftwareSerial5beginEl+0xe4>
    102e:	0e c0       	rjmp	.+28     	; 0x104c <_ZN14SoftwareSerial5beginEl+0x108>
    1030:	29 2f       	mov	r18, r25
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	9e 30       	cpi	r25, 0x0E	; 14
    1036:	18 f4       	brcc	.+6      	; 0x103e <_ZN14SoftwareSerial5beginEl+0xfa>
    1038:	28 50       	subi	r18, 0x08	; 8
    103a:	31 09       	sbc	r19, r1
    103c:	02 c0       	rjmp	.+4      	; 0x1042 <_ZN14SoftwareSerial5beginEl+0xfe>
    103e:	2e 50       	subi	r18, 0x0E	; 14
    1040:	31 09       	sbc	r19, r1
    1042:	81 e0       	ldi	r24, 0x01	; 1
    1044:	01 c0       	rjmp	.+2      	; 0x1048 <_ZN14SoftwareSerial5beginEl+0x104>
    1046:	88 0f       	add	r24, r24
    1048:	2a 95       	dec	r18
    104a:	ea f7       	brpl	.-6      	; 0x1046 <_ZN14SoftwareSerial5beginEl+0x102>
    104c:	8d 8b       	std	Y+21, r24	; 0x15
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
    104e:	8c 8d       	ldd	r24, Y+28	; 0x1c
    1050:	9d 8d       	ldd	r25, Y+29	; 0x1d
    1052:	01 97       	sbiw	r24, 0x01	; 1
    1054:	f1 f7       	brne	.-4      	; 0x1052 <_ZN14SoftwareSerial5beginEl+0x10e>
    1056:	ce 01       	movw	r24, r28
    1058:	df 91       	pop	r29
    105a:	cf 91       	pop	r28
    105c:	0c 94 7b 06 	jmp	0xcf6	; 0xcf6 <_ZN14SoftwareSerial6listenEv>

00001060 <yield>:
    1060:	08 95       	ret

00001062 <turnOffPWM>:
    1062:	83 30       	cpi	r24, 0x03	; 3
    1064:	81 f0       	breq	.+32     	; 0x1086 <turnOffPWM+0x24>
    1066:	28 f4       	brcc	.+10     	; 0x1072 <turnOffPWM+0x10>
    1068:	81 30       	cpi	r24, 0x01	; 1
    106a:	99 f0       	breq	.+38     	; 0x1092 <turnOffPWM+0x30>
    106c:	82 30       	cpi	r24, 0x02	; 2
    106e:	a1 f0       	breq	.+40     	; 0x1098 <turnOffPWM+0x36>
    1070:	08 95       	ret
    1072:	87 30       	cpi	r24, 0x07	; 7
    1074:	a9 f0       	breq	.+42     	; 0x10a0 <turnOffPWM+0x3e>
    1076:	88 30       	cpi	r24, 0x08	; 8
    1078:	b9 f0       	breq	.+46     	; 0x10a8 <turnOffPWM+0x46>
    107a:	84 30       	cpi	r24, 0x04	; 4
    107c:	d1 f4       	brne	.+52     	; 0x10b2 <turnOffPWM+0x50>
    107e:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1082:	8f 7d       	andi	r24, 0xDF	; 223
    1084:	03 c0       	rjmp	.+6      	; 0x108c <turnOffPWM+0x2a>
    1086:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    108a:	8f 77       	andi	r24, 0x7F	; 127
    108c:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    1090:	08 95       	ret
    1092:	84 b5       	in	r24, 0x24	; 36
    1094:	8f 77       	andi	r24, 0x7F	; 127
    1096:	02 c0       	rjmp	.+4      	; 0x109c <turnOffPWM+0x3a>
    1098:	84 b5       	in	r24, 0x24	; 36
    109a:	8f 7d       	andi	r24, 0xDF	; 223
    109c:	84 bd       	out	0x24, r24	; 36
    109e:	08 95       	ret
    10a0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    10a4:	8f 77       	andi	r24, 0x7F	; 127
    10a6:	03 c0       	rjmp	.+6      	; 0x10ae <turnOffPWM+0x4c>
    10a8:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    10ac:	8f 7d       	andi	r24, 0xDF	; 223
    10ae:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    10b2:	08 95       	ret

000010b4 <pinMode>:
    10b4:	cf 93       	push	r28
    10b6:	df 93       	push	r29
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	fc 01       	movw	r30, r24
    10bc:	e4 58       	subi	r30, 0x84	; 132
    10be:	ff 4f       	sbci	r31, 0xFF	; 255
    10c0:	24 91       	lpm	r18, Z
    10c2:	fc 01       	movw	r30, r24
    10c4:	e0 57       	subi	r30, 0x70	; 112
    10c6:	ff 4f       	sbci	r31, 0xFF	; 255
    10c8:	84 91       	lpm	r24, Z
    10ca:	88 23       	and	r24, r24
    10cc:	61 f1       	breq	.+88     	; 0x1126 <pinMode+0x72>
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	88 0f       	add	r24, r24
    10d2:	99 1f       	adc	r25, r25
    10d4:	fc 01       	movw	r30, r24
    10d6:	e8 54       	subi	r30, 0x48	; 72
    10d8:	ff 4f       	sbci	r31, 0xFF	; 255
    10da:	c5 91       	lpm	r28, Z+
    10dc:	d4 91       	lpm	r29, Z
    10de:	fc 01       	movw	r30, r24
    10e0:	e2 55       	subi	r30, 0x52	; 82
    10e2:	ff 4f       	sbci	r31, 0xFF	; 255
    10e4:	a5 91       	lpm	r26, Z+
    10e6:	b4 91       	lpm	r27, Z
    10e8:	61 11       	cpse	r22, r1
    10ea:	09 c0       	rjmp	.+18     	; 0x10fe <pinMode+0x4a>
    10ec:	9f b7       	in	r25, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	88 81       	ld	r24, Y
    10f2:	20 95       	com	r18
    10f4:	82 23       	and	r24, r18
    10f6:	88 83       	st	Y, r24
    10f8:	ec 91       	ld	r30, X
    10fa:	2e 23       	and	r18, r30
    10fc:	0b c0       	rjmp	.+22     	; 0x1114 <pinMode+0x60>
    10fe:	62 30       	cpi	r22, 0x02	; 2
    1100:	61 f4       	brne	.+24     	; 0x111a <pinMode+0x66>
    1102:	9f b7       	in	r25, 0x3f	; 63
    1104:	f8 94       	cli
    1106:	88 81       	ld	r24, Y
    1108:	32 2f       	mov	r19, r18
    110a:	30 95       	com	r19
    110c:	83 23       	and	r24, r19
    110e:	88 83       	st	Y, r24
    1110:	ec 91       	ld	r30, X
    1112:	2e 2b       	or	r18, r30
    1114:	2c 93       	st	X, r18
    1116:	9f bf       	out	0x3f, r25	; 63
    1118:	06 c0       	rjmp	.+12     	; 0x1126 <pinMode+0x72>
    111a:	8f b7       	in	r24, 0x3f	; 63
    111c:	f8 94       	cli
    111e:	e8 81       	ld	r30, Y
    1120:	2e 2b       	or	r18, r30
    1122:	28 83       	st	Y, r18
    1124:	8f bf       	out	0x3f, r24	; 63
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	08 95       	ret

0000112c <digitalWrite>:
    112c:	1f 93       	push	r17
    112e:	cf 93       	push	r28
    1130:	df 93       	push	r29
    1132:	28 2f       	mov	r18, r24
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	f9 01       	movw	r30, r18
    1138:	e8 59       	subi	r30, 0x98	; 152
    113a:	ff 4f       	sbci	r31, 0xFF	; 255
    113c:	84 91       	lpm	r24, Z
    113e:	f9 01       	movw	r30, r18
    1140:	e4 58       	subi	r30, 0x84	; 132
    1142:	ff 4f       	sbci	r31, 0xFF	; 255
    1144:	d4 91       	lpm	r29, Z
    1146:	f9 01       	movw	r30, r18
    1148:	e0 57       	subi	r30, 0x70	; 112
    114a:	ff 4f       	sbci	r31, 0xFF	; 255
    114c:	c4 91       	lpm	r28, Z
    114e:	cc 23       	and	r28, r28
    1150:	c1 f0       	breq	.+48     	; 0x1182 <digitalWrite+0x56>
    1152:	16 2f       	mov	r17, r22
    1154:	81 11       	cpse	r24, r1
    1156:	0e 94 31 08 	call	0x1062	; 0x1062 <turnOffPWM>
    115a:	ec 2f       	mov	r30, r28
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	ee 0f       	add	r30, r30
    1160:	ff 1f       	adc	r31, r31
    1162:	e2 55       	subi	r30, 0x52	; 82
    1164:	ff 4f       	sbci	r31, 0xFF	; 255
    1166:	a5 91       	lpm	r26, Z+
    1168:	b4 91       	lpm	r27, Z
    116a:	9f b7       	in	r25, 0x3f	; 63
    116c:	f8 94       	cli
    116e:	11 11       	cpse	r17, r1
    1170:	04 c0       	rjmp	.+8      	; 0x117a <digitalWrite+0x4e>
    1172:	8c 91       	ld	r24, X
    1174:	d0 95       	com	r29
    1176:	d8 23       	and	r29, r24
    1178:	02 c0       	rjmp	.+4      	; 0x117e <digitalWrite+0x52>
    117a:	ec 91       	ld	r30, X
    117c:	de 2b       	or	r29, r30
    117e:	dc 93       	st	X, r29
    1180:	9f bf       	out	0x3f, r25	; 63
    1182:	df 91       	pop	r29
    1184:	cf 91       	pop	r28
    1186:	1f 91       	pop	r17
    1188:	08 95       	ret

0000118a <__divmodhi4>:
    118a:	97 fb       	bst	r25, 7
    118c:	07 2e       	mov	r0, r23
    118e:	16 f4       	brtc	.+4      	; 0x1194 <__divmodhi4+0xa>
    1190:	00 94       	com	r0
    1192:	07 d0       	rcall	.+14     	; 0x11a2 <__divmodhi4_neg1>
    1194:	77 fd       	sbrc	r23, 7
    1196:	09 d0       	rcall	.+18     	; 0x11aa <__divmodhi4_neg2>
    1198:	0e 94 1a 09 	call	0x1234	; 0x1234 <__udivmodhi4>
    119c:	07 fc       	sbrc	r0, 7
    119e:	05 d0       	rcall	.+10     	; 0x11aa <__divmodhi4_neg2>
    11a0:	3e f4       	brtc	.+14     	; 0x11b0 <__divmodhi4_exit>

000011a2 <__divmodhi4_neg1>:
    11a2:	90 95       	com	r25
    11a4:	81 95       	neg	r24
    11a6:	9f 4f       	sbci	r25, 0xFF	; 255
    11a8:	08 95       	ret

000011aa <__divmodhi4_neg2>:
    11aa:	70 95       	com	r23
    11ac:	61 95       	neg	r22
    11ae:	7f 4f       	sbci	r23, 0xFF	; 255

000011b0 <__divmodhi4_exit>:
    11b0:	08 95       	ret

000011b2 <__udivmodsi4>:
    11b2:	a1 e2       	ldi	r26, 0x21	; 33
    11b4:	1a 2e       	mov	r1, r26
    11b6:	aa 1b       	sub	r26, r26
    11b8:	bb 1b       	sub	r27, r27
    11ba:	fd 01       	movw	r30, r26
    11bc:	0d c0       	rjmp	.+26     	; 0x11d8 <__udivmodsi4_ep>

000011be <__udivmodsi4_loop>:
    11be:	aa 1f       	adc	r26, r26
    11c0:	bb 1f       	adc	r27, r27
    11c2:	ee 1f       	adc	r30, r30
    11c4:	ff 1f       	adc	r31, r31
    11c6:	a2 17       	cp	r26, r18
    11c8:	b3 07       	cpc	r27, r19
    11ca:	e4 07       	cpc	r30, r20
    11cc:	f5 07       	cpc	r31, r21
    11ce:	20 f0       	brcs	.+8      	; 0x11d8 <__udivmodsi4_ep>
    11d0:	a2 1b       	sub	r26, r18
    11d2:	b3 0b       	sbc	r27, r19
    11d4:	e4 0b       	sbc	r30, r20
    11d6:	f5 0b       	sbc	r31, r21

000011d8 <__udivmodsi4_ep>:
    11d8:	66 1f       	adc	r22, r22
    11da:	77 1f       	adc	r23, r23
    11dc:	88 1f       	adc	r24, r24
    11de:	99 1f       	adc	r25, r25
    11e0:	1a 94       	dec	r1
    11e2:	69 f7       	brne	.-38     	; 0x11be <__udivmodsi4_loop>
    11e4:	60 95       	com	r22
    11e6:	70 95       	com	r23
    11e8:	80 95       	com	r24
    11ea:	90 95       	com	r25
    11ec:	9b 01       	movw	r18, r22
    11ee:	ac 01       	movw	r20, r24
    11f0:	bd 01       	movw	r22, r26
    11f2:	cf 01       	movw	r24, r30
    11f4:	08 95       	ret

000011f6 <__divmodsi4>:
    11f6:	05 2e       	mov	r0, r21
    11f8:	97 fb       	bst	r25, 7
    11fa:	1e f4       	brtc	.+6      	; 0x1202 <__divmodsi4+0xc>
    11fc:	00 94       	com	r0
    11fe:	0e 94 12 09 	call	0x1224	; 0x1224 <__negsi2>
    1202:	57 fd       	sbrc	r21, 7
    1204:	07 d0       	rcall	.+14     	; 0x1214 <__divmodsi4_neg2>
    1206:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__udivmodsi4>
    120a:	07 fc       	sbrc	r0, 7
    120c:	03 d0       	rcall	.+6      	; 0x1214 <__divmodsi4_neg2>
    120e:	4e f4       	brtc	.+18     	; 0x1222 <__divmodsi4_exit>
    1210:	0c 94 12 09 	jmp	0x1224	; 0x1224 <__negsi2>

00001214 <__divmodsi4_neg2>:
    1214:	50 95       	com	r21
    1216:	40 95       	com	r20
    1218:	30 95       	com	r19
    121a:	21 95       	neg	r18
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	4f 4f       	sbci	r20, 0xFF	; 255
    1220:	5f 4f       	sbci	r21, 0xFF	; 255

00001222 <__divmodsi4_exit>:
    1222:	08 95       	ret

00001224 <__negsi2>:
    1224:	90 95       	com	r25
    1226:	80 95       	com	r24
    1228:	70 95       	com	r23
    122a:	61 95       	neg	r22
    122c:	7f 4f       	sbci	r23, 0xFF	; 255
    122e:	8f 4f       	sbci	r24, 0xFF	; 255
    1230:	9f 4f       	sbci	r25, 0xFF	; 255
    1232:	08 95       	ret

00001234 <__udivmodhi4>:
    1234:	aa 1b       	sub	r26, r26
    1236:	bb 1b       	sub	r27, r27
    1238:	51 e1       	ldi	r21, 0x11	; 17
    123a:	07 c0       	rjmp	.+14     	; 0x124a <__udivmodhi4_ep>

0000123c <__udivmodhi4_loop>:
    123c:	aa 1f       	adc	r26, r26
    123e:	bb 1f       	adc	r27, r27
    1240:	a6 17       	cp	r26, r22
    1242:	b7 07       	cpc	r27, r23
    1244:	10 f0       	brcs	.+4      	; 0x124a <__udivmodhi4_ep>
    1246:	a6 1b       	sub	r26, r22
    1248:	b7 0b       	sbc	r27, r23

0000124a <__udivmodhi4_ep>:
    124a:	88 1f       	adc	r24, r24
    124c:	99 1f       	adc	r25, r25
    124e:	5a 95       	dec	r21
    1250:	a9 f7       	brne	.-22     	; 0x123c <__udivmodhi4_loop>
    1252:	80 95       	com	r24
    1254:	90 95       	com	r25
    1256:	bc 01       	movw	r22, r24
    1258:	cd 01       	movw	r24, r26
    125a:	08 95       	ret

0000125c <__tablejump2__>:
    125c:	ee 0f       	add	r30, r30
    125e:	ff 1f       	adc	r31, r31
    1260:	05 90       	lpm	r0, Z+
    1262:	f4 91       	lpm	r31, Z
    1264:	e0 2d       	mov	r30, r0
    1266:	09 94       	ijmp

00001268 <__do_global_dtors>:
    1268:	10 e0       	ldi	r17, 0x00	; 0
    126a:	c3 e6       	ldi	r28, 0x63	; 99
    126c:	d0 e0       	ldi	r29, 0x00	; 0
    126e:	04 c0       	rjmp	.+8      	; 0x1278 <__do_global_dtors+0x10>
    1270:	fe 01       	movw	r30, r28
    1272:	0e 94 2e 09 	call	0x125c	; 0x125c <__tablejump2__>
    1276:	21 96       	adiw	r28, 0x01	; 1
    1278:	c4 36       	cpi	r28, 0x64	; 100
    127a:	d1 07       	cpc	r29, r17
    127c:	c9 f7       	brne	.-14     	; 0x1270 <__do_global_dtors+0x8>
    127e:	f8 94       	cli

00001280 <__stop_program>:
    1280:	ff cf       	rjmp	.-2      	; 0x1280 <__stop_program>
